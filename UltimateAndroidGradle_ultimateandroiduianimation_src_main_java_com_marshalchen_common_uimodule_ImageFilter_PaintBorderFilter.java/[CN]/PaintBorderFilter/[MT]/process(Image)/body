{
  int r, g, b;
  int width=imageIn.getWidth();
  int height=imageIn.getHeight();
  int ratio=width > height ? height * 32768 / width : width * 32768 / height;
  int cx=width >> 1;
  int cy=height >> 1;
  int max=cx * cx + cy * cy;
  int min=(int)(max * (1 - Size));
  int diff=max - min;
  Image clone=imageIn.clone();
  for (int x=0; x < width; x++) {
    for (int y=0; y < height; y++) {
      int dx=cx - x;
      int dy=cy - y;
      if (width > height)       dx=(dx * ratio) >> 15;
 else       dy=(dy * ratio) >> 15;
      int distSq=dx * dx + dy * dy;
      r=(int)((((float)distSq / diff) * R));
      g=(int)((((float)distSq / diff) * G));
      b=(int)((((float)distSq / diff) * B));
      r=(r > R ? R : (r < 0 ? 0 : r));
      g=(g > G ? G : (g < 0 ? 0 : g));
      b=(b > B ? B : (b < 0 ? 0 : b));
      imageIn.setPixelColor(x,y,r,g,b);
    }
  }
  ImageBlender blender=new ImageBlender();
  blender.Mode=BlendMode.Additive;
  return blender.Blend(clone,imageIn);
}
