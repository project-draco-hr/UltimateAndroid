{
  return "precision mediump float;\n" + "uniform sampler2D " + UNIFORM_TEXTURE0 + ";\n"+ "uniform sampler2D "+ UNIFORM_TEXTUREBASE+ 1+ ";\n"+ "varying vec2 "+ VARYING_TEXCOORD+ ";\n"+ "uniform vec2 "+ UNIFORM_INPUT_SIZE+ ";\n"+ "uniform vec2 "+ UNIFORM_DISPLAY_SIZE+ ";\n"+ "uniform int "+ UNIFORM_NUM_TILES+ ";\n"+ "uniform int "+ UNIFORM_COLOR+ ";\n"+ "void main(){\n"+ "	vec2 xy = "+ VARYING_TEXCOORD+ ";\n"+ " 	xy = xy - mod(xy, "+ UNIFORM_DISPLAY_SIZE+ ");\n"+ " 	vec4 lumcoeff = vec4(0.299,0.587,0.114,0.0);\n"+ " 	vec4 inputColor = texture2D("+ UNIFORM_TEXTURE0+ ", xy);\n"+ " 	float lum = dot(inputColor,lumcoeff);\n"+ " 	lum = 1.0 - lum;\n"+ " 	float stepsize = 1.0 / float("+ UNIFORM_NUM_TILES+ ");\n"+ " 	float lumStep = (lum - mod(lum, stepsize)) / stepsize;\n"+ " 	float rowStep = 1.0 / "+ UNIFORM_INPUT_SIZE+ ".x;\n"+ " 	float x = mod(lumStep, rowStep);\n"+ " 	float y = floor(lumStep / rowStep);\n"+ " 	vec2 startCoord = vec2(float(x) *  "+ UNIFORM_INPUT_SIZE+ ".x, float(y) * "+ UNIFORM_INPUT_SIZE+ ".y);\n"+ " 	vec2 finalCoord = startCoord + (("+ VARYING_TEXCOORD+ " - xy) * ("+ UNIFORM_INPUT_SIZE+ " / "+ UNIFORM_DISPLAY_SIZE+ "));\n"+ " 	vec4 color = texture2D("+ UNIFORM_TEXTUREBASE+ 1+ ", finalCoord);\n"+ " 	if ("+ UNIFORM_COLOR+ " == 1) {\n"+ " 		color = color * inputColor;\n"+ "	}\n"+ "	gl_FragColor = color;\n"+ "}\n";
}
