{
  if (mLock) {
    return true;
  }
  int y=(int)event.getRawY();
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
    break;
case MotionEvent.ACTION_MOVE:
  int deltaY=y - mLastMotionY;
if (mPullState == PULL_DOWN_STATE) {
  Logs.i(" pull down!parent view move!");
  if (ifPushHead)   headerPrepareToRefresh(deltaY);
}
 else if (mPullState == PULL_UP_STATE) {
  Log.d("pull","pull up!parent view move!");
  if (ifPushFoot)   footerPrepareToRefresh(deltaY);
}
mLastMotionY=y;
break;
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
int topMargin=getHeaderTopMargin();
if (mPullState == PULL_DOWN_STATE) {
if (topMargin >= 0) {
headerRefreshing();
}
 else {
setHeaderTopMargin(-mHeaderViewHeight);
}
}
 else if (mPullState == PULL_UP_STATE) {
if (Math.abs(topMargin) >= mHeaderViewHeight + mFooterViewHeight) {
footerRefreshing();
}
 else {
setHeaderTopMargin(-mHeaderViewHeight);
}
}
break;
}
return super.onTouchEvent(event);
}
