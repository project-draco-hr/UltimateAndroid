{
  super.onViewCreated(view,savedInstanceState);
  mDesireImageCount=getArguments().getInt(EXTRA_SELECT_COUNT);
  final int mode=getArguments().getInt(EXTRA_SELECT_MODE);
  if (mode == MODE_MULTI) {
    ArrayList<String> tmp=getArguments().getStringArrayList(EXTRA_DEFAULT_SELECTED_LIST);
    if (tmp != null && tmp.size() > 0) {
      resultList=tmp;
    }
  }
  final boolean showCamera=getArguments().getBoolean(EXTRA_SHOW_CAMERA,true);
  mImageAdapter=new ImageGridAdapter(getActivity(),showCamera);
  mImageAdapter.showSelectIndicator(mode == MODE_MULTI);
  if (showCamera) {
    mTmpFile=FileUtils.createTmpFile(getActivity());
  }
  mPopupAnchorView=view.findViewById(R.id.footer);
  mTimeLineText=(TextView)view.findViewById(R.id.timeline_area);
  mTimeLineText.setVisibility(View.GONE);
  mCategoryText=(TextView)view.findViewById(R.id.category_btn);
  mCategoryText.setText("folder_all");
  mCategoryText.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      if (mFolderPopupWindow.isShowing()) {
        mFolderPopupWindow.dismiss();
      }
 else {
        mFolderPopupWindow.show();
        int index=mFolderAdapter.getSelectIndex();
        index=index == 0 ? index : index - 1;
        mFolderPopupWindow.getListView().setSelection(index);
      }
    }
  }
);
  mPreviewBtn=(Button)view.findViewById(R.id.preview);
  if (resultList == null || resultList.size() <= 0) {
    mPreviewBtn.setText("preview");
    mPreviewBtn.setEnabled(false);
  }
  mPreviewBtn.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
    }
  }
);
  mGridView=(GridView)view.findViewById(R.id.grid);
  mGridView.setOnScrollListener(new AbsListView.OnScrollListener(){
    @Override public void onScrollStateChanged(    AbsListView absListView,    int state){
      final Picasso picasso=Picasso.with(getActivity());
      if (state == SCROLL_STATE_IDLE || state == SCROLL_STATE_TOUCH_SCROLL) {
        picasso.resumeTag(getActivity());
      }
 else {
        picasso.pauseTag(getActivity());
      }
      if (state == SCROLL_STATE_IDLE) {
        mTimeLineText.setVisibility(View.GONE);
      }
 else       if (state == SCROLL_STATE_FLING) {
        mTimeLineText.setVisibility(View.VISIBLE);
      }
    }
    @Override public void onScroll(    AbsListView view,    int firstVisibleItem,    int visibleItemCount,    int totalItemCount){
      if (mTimeLineText.getVisibility() == View.VISIBLE) {
        int index=firstVisibleItem + 1 == view.getAdapter().getCount() ? view.getAdapter().getCount() - 1 : firstVisibleItem + 1;
        Image image=(Image)view.getAdapter().getItem(index);
        if (image != null) {
          mTimeLineText.setText(TimeUtils.formatPhotoDate(image.path));
        }
      }
    }
  }
);
  mGridView.setAdapter(mImageAdapter);
  mGridView.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
    @Override @TargetApi(Build.VERSION_CODES.JELLY_BEAN) public void onGlobalLayout(){
      final int width=mGridView.getWidth();
      final int height=mGridView.getHeight();
      final int desireSize=getResources().getDimensionPixelOffset(R.dimen.multi_image_select_image_size);
      final int numCount=width / desireSize;
      final int columnSpace=getResources().getDimensionPixelOffset(R.dimen.multi_image_select_space_size);
      int columnWidth=(width - columnSpace * (numCount - 1)) / numCount;
      mImageAdapter.setItemSize(columnWidth);
      if (mFolderPopupWindow == null) {
        createPopupFolderList(width,height);
      }
      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
        mGridView.getViewTreeObserver().removeOnGlobalLayoutListener(this);
      }
 else {
        mGridView.getViewTreeObserver().removeGlobalOnLayoutListener(this);
      }
    }
  }
);
  mGridView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> adapterView,    View view,    int i,    long l){
      if (mImageAdapter.isShowCamera()) {
        if (i == 0) {
          showCameraAction();
        }
 else {
          Image image=(Image)adapterView.getAdapter().getItem(i);
          selectImageFromGrid(image,mode);
        }
      }
 else {
        Image image=(Image)adapterView.getAdapter().getItem(i);
        selectImageFromGrid(image,mode);
      }
    }
  }
);
  mFolderAdapter=new FolderAdapter(getActivity());
}
