{
  int matt=imageIn.getWidth();
  int width=matt;
  int height=imageIn.getHeight();
  if ((_point.X + _point.Y) <= 0) {
    _point.X=width / 2;
    _point.Y=height / 2;
  }
  _scolor=matt * 0.0375;
  _sglow=matt * 0.078125;
  _sinner=matt * 0.1796875;
  _souter=matt * 0.3359375;
  _shalo=matt * 0.084375;
  _color.r=239.0 / 255.0;
  _color.g=239.0 / 255.0;
  _color.b=239.0 / 255.0;
  _glow.r=245.0 / 255.0;
  _glow.g=245.0 / 255.0;
  _glow.b=245.0 / 255.0;
  _inner.r=255.0 / 255.0;
  _inner.g=38.0 / 255.0;
  _inner.b=43.0 / 255.0;
  _outer.r=69.0 / 255.0;
  _outer.g=59.0 / 255.0;
  _outer.b=64.0 / 255.0;
  _halo.r=80.0 / 255.0;
  _halo.g=15.0 / 255.0;
  _halo.b=4.0 / 255.0;
  initref((int)_point.X,(int)_point.Y,width,imageIn.getHeight(),matt);
  for (int x=0; x < width; x++) {
    for (int y=0; y < height; y++) {
      double hyp=FHypot(x - _point.X,y - _point.Y);
      int color=imageIn.getPixelColor(x,y);
      color=mcolor(color,hyp);
      color=mglow(color,hyp);
      color=minner(color,hyp);
      color=mouter(color,hyp);
      color=mhalo(color,hyp);
      for (int i=0; i < _numref; i++) {
switch (_reflect[i].type) {
case 1:
{
            color=mrt1(color,_reflect[i],x,y);
            break;
          }
case 2:
{
          color=mrt2(color,_reflect[i],x,y);
          break;
        }
case 3:
{
        color=mrt3(color,_reflect[i],x,y);
        break;
      }
case 4:
{
      color=mrt4(color,_reflect[i],x,y);
      break;
    }
}
}
imageIn.setPixelColor(x,y,color);
}
}
return imageIn;
}
