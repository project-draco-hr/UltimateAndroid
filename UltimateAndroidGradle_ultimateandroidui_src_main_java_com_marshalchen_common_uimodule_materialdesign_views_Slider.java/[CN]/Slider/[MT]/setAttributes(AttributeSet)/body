{
  setBackgroundResource(R.drawable.material_design_background_transparent);
  setMinimumHeight(Utils.dpToPx(48,getResources()));
  setMinimumWidth(Utils.dpToPx(80,getResources()));
  int bacgroundColor=attrs.getAttributeResourceValue(ANDROIDXML,"background",-1);
  if (bacgroundColor != -1) {
    setBackgroundColor(getResources().getColor(bacgroundColor));
  }
 else {
    String background=attrs.getAttributeValue(ANDROIDXML,"background");
    if (background != null)     setBackgroundColor(Color.parseColor(background));
  }
  showNumberIndicator=attrs.getAttributeBooleanValue(MATERIALDESIGNXML,"showNumberIndicator",false);
  min=attrs.getAttributeIntValue(MATERIALDESIGNXML,"min",0);
  max=attrs.getAttributeIntValue(MATERIALDESIGNXML,"max",0);
  value=attrs.getAttributeIntValue(MATERIALDESIGNXML,"value",min);
  ball=new Ball(getContext());
  RelativeLayout.LayoutParams params=new LayoutParams(Utils.dpToPx(20,getResources()),Utils.dpToPx(20,getResources()));
  params.addRule(RelativeLayout.CENTER_VERTICAL,RelativeLayout.TRUE);
  ball.setLayoutParams(params);
  addView(ball);
  if (showNumberIndicator) {
    numberIndicator=new NumberIndicator(getContext());
  }
}
