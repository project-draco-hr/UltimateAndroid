{
  super.onDraw(canvas);
  if (mViewPager == null) {
    return;
  }
  final int count=mViewPager.getAdapter().getCount();
  if (count == 0) {
    return;
  }
  if (mCurrentPage >= count) {
    setCurrentItem(count - 1);
    return;
  }
  int longSize;
  int longPaddingBefore;
  int longPaddingAfter;
  int shortPaddingBefore;
  if (mOrientation == HORIZONTAL) {
    longSize=getWidth();
    longPaddingBefore=getPaddingLeft();
    longPaddingAfter=getPaddingRight();
    shortPaddingBefore=getPaddingTop();
  }
 else {
    longSize=getHeight();
    longPaddingBefore=getPaddingTop();
    longPaddingAfter=getPaddingBottom();
    shortPaddingBefore=getPaddingLeft();
  }
  final float threeRadius=mRadius * 3;
  final float shortOffset=shortPaddingBefore + mRadius;
  float longOffset=longPaddingBefore + mRadius;
  if (mCentered) {
    longOffset+=((longSize - longPaddingBefore - longPaddingAfter) / 2.0f) - ((count * threeRadius) / 2.0f);
  }
  float dX;
  float dY;
  float pageFillRadius=mRadius;
  if (mPaintStroke.getStrokeWidth() > 0) {
    pageFillRadius-=mPaintStroke.getStrokeWidth() / 2.0f;
  }
  for (int iLoop=0; iLoop < count; iLoop++) {
    float drawLong=longOffset + (iLoop * threeRadius);
    if (mOrientation == HORIZONTAL) {
      dX=drawLong;
      dY=shortOffset;
    }
 else {
      dX=shortOffset;
      dY=drawLong;
    }
    if (mPaintPageFill.getAlpha() > 0) {
      canvas.drawCircle(dX,dY,pageFillRadius,mPaintPageFill);
    }
    if (pageFillRadius != mRadius) {
      canvas.drawCircle(dX,dY,mRadius,mPaintStroke);
    }
  }
  float cx=(mSnap ? mSnapPage : mCurrentPage) * threeRadius;
  if (!mSnap) {
    cx+=mPageOffset * threeRadius;
  }
  if (mOrientation == HORIZONTAL) {
    dX=longOffset + cx;
    dY=shortOffset;
  }
 else {
    dX=shortOffset;
    dY=longOffset + cx;
  }
  canvas.drawCircle(dX,dY,mRadius,mPaintFill);
}
