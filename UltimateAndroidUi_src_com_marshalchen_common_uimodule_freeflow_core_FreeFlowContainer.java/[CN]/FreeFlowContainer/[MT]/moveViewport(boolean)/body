{
  mScrollableWidth=mLayout.getContentWidth() - getWidth();
  if (mScrollableWidth < 0) {
    mScrollableWidth=0;
  }
  mScrollableHeight=mLayout.getContentHeight() - getHeight();
  if (mScrollableHeight < 0) {
    mScrollableHeight=0;
  }
  if (isInFlingMode) {
    if (viewPortX < 0 || viewPortX > mScrollableWidth || viewPortY < 0 || viewPortY > mScrollableHeight) {
      mTouchMode=TOUCH_MODE_OVERFLING;
    }
  }
 else {
    if (viewPortX < -overflingDistance) {
      viewPortX=-overflingDistance;
    }
 else     if (viewPortX > mScrollableWidth + overflingDistance) {
      viewPortX=(mScrollableWidth + overflingDistance);
    }
    if (viewPortY < (int)(-overflingDistance)) {
      viewPortY=(int)-overflingDistance;
    }
 else     if (viewPortY > mScrollableHeight + overflingDistance) {
      viewPortY=(int)(mScrollableHeight + overflingDistance);
    }
    if (mEdgeEffectsEnabled) {
      if (viewPortX <= 0) {
        mLeftEdge.onPull(viewPortX / (-overflingDistance));
      }
 else       if (viewPortX >= mScrollableWidth) {
        mRightEdge.onPull((viewPortX - mScrollableWidth) / (-overflingDistance));
      }
      if (viewPortY <= 0) {
        mTopEdge.onPull(viewPortY / (-overflingDistance));
      }
 else       if (viewPortY >= mScrollableHeight) {
        mBottomEdge.onPull((viewPortY - mScrollableHeight) / (-overflingDistance));
      }
    }
  }
  LinkedHashMap<Object,FreeFlowItem> oldFrames=new LinkedHashMap<Object,FreeFlowItem>();
  copyFrames(frames,oldFrames);
  frames=new LinkedHashMap<Object,FreeFlowItem>();
  copyFrames(mLayout.getItemProxies(viewPortX,viewPortY),frames);
  LayoutChangeset changeSet=getViewChanges(oldFrames,frames,true);
  for (  FreeFlowItem freeflowItem : changeSet.added) {
    addAndMeasureViewIfNeeded(freeflowItem);
    doLayout(freeflowItem);
  }
  for (  Pair<FreeFlowItem,Rect> freeflowItemPair : changeSet.moved) {
    doLayout(freeflowItemPair.first);
  }
  for (  FreeFlowItem freeflowItem : changeSet.removed) {
    removeViewInLayout(freeflowItem.view);
    returnItemToPoolIfNeeded(freeflowItem);
  }
  invalidate();
}
