{
  final LinearLayout explodeLayout=new LinearLayout(view.getContext());
  LinearLayout[] layouts=new LinearLayout[yParts];
  parentView=(ViewGroup)view.getParent();
  explodeLayout.setLayoutParams(view.getLayoutParams());
  explodeLayout.setOrientation(LinearLayout.VERTICAL);
  explodeLayout.setClipChildren(false);
  view.setDrawingCacheEnabled(true);
  Bitmap viewBmp=view.getDrawingCache(true);
  int totalParts=xParts * yParts, bmpWidth=viewBmp.getWidth() / xParts, bmpHeight=viewBmp.getHeight() / yParts, widthCount=0, heightCount=0, middleXPart=(xParts - 1) / 2;
  int[] translation=new int[2];
  ImageView[] imageViews=new ImageView[totalParts];
  for (int i=0; i < totalParts; i++) {
    int translateX=0, translateY=0;
    if (i % xParts == 0) {
      if (i != 0)       heightCount++;
      widthCount=0;
      layouts[heightCount]=new LinearLayout(view.getContext());
      layouts[heightCount].setClipChildren(false);
      translation=sideTranslation(heightCount,bmpWidth,bmpHeight,xParts,yParts);
      translateX=translation[0];
      translateY=translation[1];
    }
 else     if (i % xParts == xParts - 1) {
      translation=sideTranslation(heightCount,-bmpWidth,bmpHeight,xParts,yParts);
      translateX=translation[0];
      translateY=translation[1];
    }
 else {
      if (widthCount == middleXPart) {
        if (heightCount == 0) {
          translateX=0;
          if (yParts != 1) {
            translateY=-bmpHeight;
          }
        }
 else         if (heightCount == yParts - 1) {
          translateX=0;
          translateY=bmpHeight;
        }
      }
    }
    if (xParts == 1) {
      translation=sideTranslation(heightCount,0,bmpHeight,xParts,yParts);
      translateX=translation[0];
      translateY=translation[1];
    }
    imageViews[i]=new ImageView(view.getContext());
    imageViews[i].setImageBitmap(Bitmap.createBitmap(viewBmp,bmpWidth * widthCount,bmpHeight * heightCount,bmpWidth,bmpHeight));
    imageViews[i].animate().translationXBy(translateX).translationYBy(translateY).alpha(0).setInterpolator(interpolator).setDuration(duration);
    layouts[heightCount].addView(imageViews[i]);
    widthCount++;
  }
  for (int i=0; i < yParts; i++)   explodeLayout.addView(layouts[i]);
  final int positionView=parentView.indexOfChild(view);
  parentView.removeView(view);
  parentView.addView(explodeLayout,positionView);
  ViewGroup rootView=(ViewGroup)explodeLayout.getRootView();
  while (!parentView.equals(rootView)) {
    parentView.setClipChildren(false);
    parentView=(ViewGroup)parentView.getParent();
  }
  rootView.setClipChildren(false);
  imageViews[0].animate().setListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      parentView=(ViewGroup)explodeLayout.getParent();
      view.setLayoutParams(explodeLayout.getLayoutParams());
      view.setVisibility(View.INVISIBLE);
      parentView.removeView(explodeLayout);
      parentView.addView(view,positionView);
      if (getListener() != null) {
        getListener().onAnimationEnd(ExplodeAnimation.this);
      }
    }
  }
);
}
