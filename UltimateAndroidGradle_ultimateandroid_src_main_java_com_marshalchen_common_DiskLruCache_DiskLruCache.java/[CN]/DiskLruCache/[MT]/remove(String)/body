{
  checkNotClosed();
  validateKey(key);
  Entry entry=lruEntries.get(key);
  if (entry == null || entry.currentEditor != null) {
    return false;
  }
  for (int i=0; i < valueCount; i++) {
    File file=entry.getCleanFile(i);
    if (file.exists() && !file.delete()) {
      throw new IOException("failed to delete " + file);
    }
    size-=entry.lengths[i];
    entry.lengths[i]=0;
  }
  redundantOpCount++;
  journalWriter.append(REMOVE + ' ' + key+ '\n');
  lruEntries.remove(key);
  if (journalRebuildRequired()) {
    executorService.submit(cleanupCallable);
  }
  return true;
}
