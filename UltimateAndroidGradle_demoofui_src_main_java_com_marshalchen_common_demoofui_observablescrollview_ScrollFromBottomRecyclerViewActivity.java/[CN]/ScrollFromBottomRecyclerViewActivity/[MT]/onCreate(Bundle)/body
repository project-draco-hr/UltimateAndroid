{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.observable_scroll_view_activity_toolbarcontrolrecyclerview);
  setSupportActionBar((Toolbar)findViewById(R.id.toolbar));
  mHeaderView=findViewById(R.id.header);
  ViewCompat.setElevation(mHeaderView,getResources().getDimension(R.dimen.toolbar_elevation));
  mToolbarView=findViewById(R.id.toolbar);
  mRecyclerView=(ObservableRecyclerView)findViewById(R.id.recycler);
  mRecyclerView.setScrollViewCallbacks(this);
  mRecyclerView.setLayoutManager(new LinearLayoutManager(this));
  mRecyclerView.setHasFixedSize(false);
  ArrayList<String> items=new ArrayList<String>();
  for (int i=1; i <= 100; i++) {
    items.add("Item " + i);
  }
  View headerView=LayoutInflater.from(this).inflate(R.layout.observable_scroll_view_recycler_header,null);
  mRecyclerView.setAdapter(new SimpleHeaderRecyclerAdapter(this,items,headerView));
  ViewTreeObserver vto=mRecyclerView.getViewTreeObserver();
  vto.addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
    @Override public void onGlobalLayout(){
      if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {
        mRecyclerView.getViewTreeObserver().removeGlobalOnLayoutListener(this);
      }
 else {
        mRecyclerView.getViewTreeObserver().removeOnGlobalLayoutListener(this);
      }
      int count=mRecyclerView.getAdapter().getItemCount() - 1;
      int position=count == 0 ? 1 : count > 0 ? count : 0;
      mRecyclerView.scrollToPosition(position);
    }
  }
);
}
