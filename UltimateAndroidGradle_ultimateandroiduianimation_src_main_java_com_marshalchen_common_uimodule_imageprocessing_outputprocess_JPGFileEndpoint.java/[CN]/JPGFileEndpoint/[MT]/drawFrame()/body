{
  if (frameBuffer == null) {
    if (getWidth() != 0 && getHeight() != 0) {
      initFBO();
    }
 else {
      return;
    }
  }
  GLES20.glBindFramebuffer(GLES20.GL_FRAMEBUFFER,frameBuffer[0]);
  super.drawFrame();
  int[] pixels=new int[getWidth() * getHeight()];
  IntBuffer intBuffer=IntBuffer.wrap(pixels);
  intBuffer.position(0);
  GLES20.glReadPixels(0,0,getWidth(),getHeight(),GLES20.GL_RGBA,GLES20.GL_UNSIGNED_BYTE,intBuffer);
  GLES20.glBindFramebuffer(GLES20.GL_FRAMEBUFFER,0);
  for (int i=0; i < pixels.length; i++) {
    pixels[i]=(pixels[i] & (0xFF00FF00)) | ((pixels[i] >> 16) & 0x000000FF) | ((pixels[i] << 16) & 0x00FF0000);
  }
  Bitmap image=Bitmap.createBitmap(pixels,getWidth(),getHeight(),Bitmap.Config.ARGB_8888);
  String filePathName;
  if (increment) {
    filePathName=filePath + curNumber + ".jpg";
    curNumber++;
  }
 else {
    filePathName=filePath + ".jpg";
  }
  try {
    OutputStream out=new FileOutputStream(new File(filePathName));
    image.compress(Bitmap.CompressFormat.JPEG,100,out);
    out.flush();
    out.close();
    if (storeToMedia) {
      String[] name=filePath.split("/");
      MediaStore.Images.Media.insertImage(context.getContentResolver(),filePathName,name[name.length - 1],"");
    }
  }
 catch (  FileNotFoundException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
}
