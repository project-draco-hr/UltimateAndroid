{
  Bitmap scaledSrcBmp;
  int diameter=radius * 2;
  int bmpWidth=bmp.getWidth();
  int bmpHeight=bmp.getHeight();
  int squareWidth=0, squareHeight=0;
  int x=0, y=0;
  Bitmap squareBitmap;
  if (bmpHeight > bmpWidth) {
    squareWidth=squareHeight=bmpWidth;
    x=0;
    y=(bmpHeight - bmpWidth) / 2;
    squareBitmap=Bitmap.createBitmap(bmp,x,y,squareWidth,squareHeight);
  }
 else   if (bmpHeight < bmpWidth) {
    squareWidth=squareHeight=bmpHeight;
    x=(bmpWidth - bmpHeight) / 2;
    y=0;
    squareBitmap=Bitmap.createBitmap(bmp,x,y,squareWidth,squareHeight);
  }
 else {
    squareBitmap=bmp;
  }
  if (squareBitmap.getWidth() != diameter || squareBitmap.getHeight() != diameter) {
    scaledSrcBmp=Bitmap.createScaledBitmap(squareBitmap,diameter,diameter,true);
  }
 else {
    scaledSrcBmp=squareBitmap;
  }
  Bitmap output=Bitmap.createBitmap(scaledSrcBmp.getWidth(),scaledSrcBmp.getHeight(),Config.ARGB_8888);
  Canvas canvas=new Canvas(output);
  Paint paint=new Paint();
  Rect rect=new Rect(0,0,scaledSrcBmp.getWidth(),scaledSrcBmp.getHeight());
  paint.setAntiAlias(true);
  paint.setFilterBitmap(true);
  paint.setDither(true);
  canvas.drawARGB(0,0,0,0);
  canvas.drawCircle(scaledSrcBmp.getWidth() / 2,scaledSrcBmp.getHeight() / 2,scaledSrcBmp.getWidth() / 2,paint);
  paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));
  canvas.drawBitmap(scaledSrcBmp,rect,rect,paint);
  bmp.recycle();
  squareBitmap.recycle();
  scaledSrcBmp.recycle();
  bmp=null;
  squareBitmap=null;
  scaledSrcBmp=null;
  return output;
}
