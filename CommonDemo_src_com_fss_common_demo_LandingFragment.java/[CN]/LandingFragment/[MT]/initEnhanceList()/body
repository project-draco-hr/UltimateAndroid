{
  HashMap<String,String> map=new HashMap<>();
  map.put("name","SmoothBar");
  map.put("detail","try");
  map.put("subname","to ProgressBar");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","DynamicGrid");
  map.put("detail","try");
  map.put("subname","to DynamicGrid");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","Cool Drag Drop ");
  map.put("detail","try");
  map.put("subname","to DragDrop");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","Stickyheader");
  map.put("detail","try");
  map.put("subname","to StickyHeader");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","ListViewFilter");
  map.put("detail","try");
  map.put("subname","to ListViewFilter");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","FlipView");
  map.put("detail","try");
  map.put("subname","to FlipView");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","Photoview");
  map.put("detail","try");
  map.put("subname","to Photoview");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","FoldingActivity");
  map.put("detail","try");
  map.put("subname","to Folding");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","CircularBar");
  map.put("detail","try");
  map.put("subname","to CircularBar");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","FoldableList");
  map.put("detail","try");
  map.put("subname","to FoldableList");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","UnfoldableList");
  map.put("detail","try");
  map.put("subname","to UnfoldableList");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","TimeSquare");
  map.put("detail","try");
  map.put("subname","to TimeSquare");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","FaceCrop");
  map.put("detail","try");
  map.put("subname","to FaceCrop");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","KenBurns");
  map.put("detail","try");
  map.put("subname","to KenBurns");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","Discroll");
  map.put("detail","try");
  map.put("subname","to Discroll");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","Panning");
  map.put("detail","try");
  map.put("subname","to Panning");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","ParScroll");
  map.put("detail","try");
  map.put("subname","to ParScroll");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","ProgressWheel");
  map.put("detail","try");
  map.put("subname","to Wheel");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","ViewTabs");
  map.put("detail","try");
  map.put("subname","to ViewTabs");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","Rebound");
  map.put("detail","try");
  map.put("subname","Rebound");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","ReboundSimple");
  map.put("detail","try");
  map.put("subname","Rebound");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","ListAnim");
  map.put("detail","try");
  map.put("subname","ListAnim");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","PullSplash");
  map.put("detail","try");
  map.put("subname","PullSplash");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","Jsoup");
  map.put("detail","try");
  map.put("subname","Jsoup");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","ViewServer");
  map.put("detail","try");
  map.put("subname","ViewServer");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","PassCode");
  map.put("detail","try");
  map.put("subname","PassCode");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","GestureTouch");
  map.put("detail","try");
  map.put("subname","GestureTouch");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","act_anim");
  map.put("detail","try");
  map.put("subname","act_anim");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","pullscrollview");
  map.put("detail","try");
  map.put("subname","pull");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","card swiped");
  map.put("detail","try");
  map.put("subname","card swiped");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","ShowCase");
  map.put("detail","try");
  map.put("subname","ShowCase");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","ListBuddies");
  map.put("detail","try");
  map.put("subname","ListBuddies");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","ActivityTransition");
  map.put("detail","try");
  map.put("subname","act");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","AutoFit");
  map.put("detail","try");
  map.put("subname","AutoFit");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","Draggable");
  map.put("detail","try");
  map.put("subname","Draggable");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","FloatLayout");
  map.put("detail","try");
  map.put("subname","FloatLayout");
  enhanceList.add(map);
  map=new HashMap<>();
  map.put("name","WireFrame");
  map.put("detail","try");
  map.put("subname","WireFrame");
  enhanceList.add(map);
  enhancedListAdapter=new EnhancedListAdapter(enhanceList);
  landingEnhanceListView.setAdapter(enhancedListAdapter);
  landingEnhanceListView.setDismissCallback(new EnhancedListView.OnDismissCallback(){
    @Override public EnhancedListView.Undoable onDismiss(    EnhancedListView listView,    int position){
      enhancedListAdapter.remove(position);
      return null;
    }
  }
);
  landingEnhanceListView.setSwipingLayout(R.id.swiping_layout);
  landingEnhanceListView.setUndoStyle(null);
  landingEnhanceListView.enableSwipeToDismiss();
  landingEnhanceListView.setSwipeDirection(EnhancedListView.SwipeDirection.START);
  landingEnhanceListView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
switch (position) {
case 0:
        BasicUtils.sendIntent(getActivity(),SmoothProgressBarActivity.class);
      break;
case 1:
    BasicUtils.sendIntent(getActivity(),DynamicGridActivity.class);
  break;
case 2:
BasicUtils.sendIntent(getActivity(),CoolDragAndDropActivity.class);
break;
case 3:
BasicUtils.sendIntent(getActivity(),StickGridItemListActivity.class);
break;
case 4:
BasicUtils.sendIntent(getActivity(),ListViewFilterActivity.class);
break;
case 5:
BasicUtils.sendIntent(getActivity(),FlipViewActivity.class);
break;
case 6:
BasicUtils.sendIntent(getActivity(),PhotoViewActivity.class);
break;
case 7:
BasicUtils.sendIntent(getActivity(),FoldingActivitys.class);
break;
case 8:
BasicUtils.sendIntent(getActivity(),CircularBarActivity.class);
break;
case 9:
BasicUtils.sendIntent(getActivity(),FoldableListActivity.class);
break;
case 10:
BasicUtils.sendIntent(getActivity(),UnfoldableDetailsActivity.class);
break;
case 11:
BasicUtils.sendIntent(getActivity(),CalendarSquareActivity.class);
break;
case 12:
BasicUtils.sendIntent(getActivity(),FaceCropActivity.class);
break;
case 13:
BasicUtils.sendIntent(getActivity(),KenBurnsViewActivity.class);
break;
case 14:
BasicUtils.sendIntent(getActivity(),DiscrollActivity.class);
break;
case 15:
BasicUtils.sendIntent(getActivity(),PanningViewActivity.class);
break;
case 16:
BasicUtils.sendIntent(getActivity(),ParallaxScrollActivity.class);
break;
case 17:
BasicUtils.sendIntent(getActivity(),ProgressbarWheelActivity.class);
break;
case 18:
BasicUtils.sendIntent(getActivity(),ViewpagerSlidingTabsActivity.class);
break;
case 19:
BasicUtils.sendIntent(getActivity(),ReboundActivity.class);
break;
case 20:
BasicUtils.sendIntent(getActivity(),ReboundActivitySimple.class);
break;
case 21:
BasicUtils.sendIntent(getActivity(),ListAnimationActivity.class);
break;
case 22:
BasicUtils.sendIntent(getActivity(),PullSplashActivity.class);
break;
case 23:
BasicUtils.sendIntent(getActivity(),UtilsDemoActivity.class);
break;
case 24:
BasicUtils.sendIntent(getActivity(),ViewServerActivity.class);
break;
case 25:
BasicUtils.sendIntent(getActivity(),PasscodePreferencesActivity.class);
break;
case 26:
BasicUtils.sendIntent(getActivity(),GestureTouchActivity.class);
break;
case 27:
BasicUtils.sendIntent(getActivity(),ActivityAnimationsActivity.class);
break;
case 28:
BasicUtils.sendIntent(getActivity(),PullScrollViewActivity.class);
break;
case 29:
BasicUtils.sendIntent(getActivity(),CardsSwipedActivity.class);
break;
case 30:
BasicUtils.sendIntent(getActivity(),ShowCaseSampleActivity.class);
break;
case 31:
BasicUtils.sendIntent(getActivity(),ListBuddiesActivity.class);
break;
case 32:
BasicUtils.sendIntent(getActivity(),ActivityTransitionActivity.class);
break;
case 33:
BasicUtils.sendIntent(getActivity(),AutofitTextViewActivity.class);
break;
case 34:
BasicUtils.sendIntent(getActivity(),DraggableGridViewPagerTestActivity.class);
break;
case 35:
BasicUtils.sendIntent(getActivity(),FloatLabelActivity.class);
break;
case 36:
BasicUtils.sendIntent(getActivity(),WireFrameActivity.class);
break;
}
}
}
);
}
