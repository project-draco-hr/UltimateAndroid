{
  final int firstPosition=getFirstVisiblePosition();
  if (firstPosition != 0 || childCount == 0) {
    return;
  }
  final int start=getStartWithPadding();
  final int end=getEndWithPadding();
  final int itemCount=state.getItemCount();
  final int lastPosition=getLastVisiblePosition();
  int startOffset=mLayoutStart - start;
  if (startOffset > 0) {
    if (lastPosition < itemCount - 1 || mLayoutEnd > end) {
      if (lastPosition == itemCount - 1) {
        startOffset=Math.min(startOffset,mLayoutEnd - end);
      }
      offsetChildren(-startOffset);
      if (lastPosition < itemCount - 1) {
        fillAfter(lastPosition + 1,recycler,state);
        adjustViewsStartOrEnd();
      }
    }
 else     if (lastPosition == itemCount - 1) {
      adjustViewsStartOrEnd();
    }
  }
}
