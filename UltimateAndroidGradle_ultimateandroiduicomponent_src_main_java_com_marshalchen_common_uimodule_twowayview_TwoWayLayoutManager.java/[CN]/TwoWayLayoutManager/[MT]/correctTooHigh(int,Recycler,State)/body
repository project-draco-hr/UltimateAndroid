{
  final int lastPosition=getLastVisiblePosition();
  if (lastPosition != state.getItemCount() - 1 || childCount == 0) {
    return;
  }
  final int start=getStartWithPadding();
  final int end=getEndWithPadding();
  final int firstPosition=getFirstVisiblePosition();
  int endOffset=end - mLayoutEnd;
  if (endOffset > 0 && (firstPosition > 0 || mLayoutStart < start)) {
    if (firstPosition == 0) {
      endOffset=Math.min(endOffset,start - mLayoutStart);
    }
    offsetChildren(endOffset);
    if (firstPosition > 0) {
      fillBefore(firstPosition - 1,recycler);
      adjustViewsStartOrEnd();
    }
  }
}
