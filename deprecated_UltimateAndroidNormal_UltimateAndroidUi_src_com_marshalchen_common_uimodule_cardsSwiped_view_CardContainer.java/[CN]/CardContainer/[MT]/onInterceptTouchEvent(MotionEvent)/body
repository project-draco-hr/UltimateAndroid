{
  if (mTopCard == null) {
    return false;
  }
  if (mGestureDetector.onTouchEvent(event)) {
    return true;
  }
  final int pointerIndex;
  final float x, y;
  final float dx, dy;
switch (event.getActionMasked()) {
case MotionEvent.ACTION_DOWN:
    mTopCard.getHitRect(childRect);
  CardModel cardModel=(CardModel)getAdapter().getItem(0);
if (cardModel.getOnClickListener() != null) {
  cardModel.getOnClickListener().OnClickListener();
}
pointerIndex=event.getActionIndex();
x=event.getX(pointerIndex);
y=event.getY(pointerIndex);
if (!childRect.contains((int)x,(int)y)) {
return false;
}
mLastTouchX=x;
mLastTouchY=y;
mActivePointerId=event.getPointerId(pointerIndex);
break;
case MotionEvent.ACTION_MOVE:
pointerIndex=event.findPointerIndex(mActivePointerId);
x=event.getX(pointerIndex);
y=event.getY(pointerIndex);
if (Math.abs(x - mLastTouchX) > mTouchSlop || Math.abs(y - mLastTouchY) > mTouchSlop) {
float[] points=new float[]{x - mTopCard.getLeft(),y - mTopCard.getTop()};
mTopCard.getMatrix().invert(mMatrix);
mMatrix.mapPoints(points);
mTopCard.setPivotX(points[0]);
mTopCard.setPivotY(points[1]);
return true;
}
}
return false;
}
