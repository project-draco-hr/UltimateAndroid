{
  mPaint.setTextSize(mTextField.getTextSize());
  mPaint.setTypeface(mTextField.getTypeface());
  float mTextWidth=mPaint.measureText(mTextField.getText().toString());
  mMarqueeNeeded=mTextWidth > getMeasuredWidth();
  mTextDifference=Math.abs((mTextWidth - getMeasuredWidth())) + 5;
  Logs.d(TAG,"mTextWidth       : " + mTextWidth);
  Logs.d(TAG,"measuredWidth    : " + getMeasuredWidth());
  Logs.d(TAG,"mMarqueeNeeded   : " + mMarqueeNeeded);
  Logs.d(TAG,"mTextDifference  : " + mTextDifference);
  final int duration=(int)(mTextDifference * mSpeed);
  mMoveTextOut=new TranslateAnimation(0,-mTextDifference,0,0);
  mMoveTextOut.setDuration(duration);
  mMoveTextOut.setInterpolator(mInterpolator);
  mMoveTextOut.setFillAfter(true);
  mMoveTextIn=new TranslateAnimation(-mTextDifference,0,0,0);
  mMoveTextIn.setDuration(duration);
  mMoveTextIn.setStartOffset(mAnimationPause);
  mMoveTextIn.setInterpolator(mInterpolator);
  mMoveTextIn.setFillAfter(true);
  mMoveTextOut.setAnimationListener(new Animation.AnimationListener(){
    public void onAnimationStart(    Animation animation){
      expandTextView();
    }
    public void onAnimationEnd(    Animation animation){
      if (mCancelled) {
        return;
      }
      mTextField.startAnimation(mMoveTextIn);
    }
    public void onAnimationRepeat(    Animation animation){
    }
  }
);
  mMoveTextIn.setAnimationListener(new Animation.AnimationListener(){
    public void onAnimationStart(    Animation animation){
    }
    public void onAnimationEnd(    Animation animation){
      cutTextView();
      if (mCancelled) {
        return;
      }
      startTextFieldAnimation();
    }
    public void onAnimationRepeat(    Animation animation){
    }
  }
);
}
