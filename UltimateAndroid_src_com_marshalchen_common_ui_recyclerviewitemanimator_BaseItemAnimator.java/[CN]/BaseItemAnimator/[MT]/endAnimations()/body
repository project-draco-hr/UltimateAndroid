{
  int count=mPendingMoves.size();
  for (int i=count - 1; i >= 0; i--) {
    MoveInfo item=mPendingMoves.get(i);
    View view=item.holder.itemView;
    ViewCompat.animate(view).cancel();
    ViewCompat.setTranslationY(view,0);
    ViewCompat.setTranslationX(view,0);
    dispatchMoveFinished(item.holder);
    mPendingMoves.remove(item);
  }
  count=mPendingRemovals.size();
  for (int i=count - 1; i >= 0; i--) {
    RecyclerView.ViewHolder item=mPendingRemovals.get(i);
    dispatchRemoveFinished(item);
    mPendingRemovals.remove(item);
  }
  count=mPendingAdditions.size();
  for (int i=count - 1; i >= 0; i--) {
    RecyclerView.ViewHolder item=mPendingAdditions.get(i);
    View view=item.itemView;
    ViewCompat.setAlpha(view,1);
    dispatchAddFinished(item);
    mPendingAdditions.remove(item);
  }
  if (!isRunning()) {
    return;
  }
  count=mMoveAnimations.size();
  for (int i=count - 1; i >= 0; i--) {
    RecyclerView.ViewHolder item=mMoveAnimations.get(i);
    View view=item.itemView;
    ViewCompat.animate(view).cancel();
    ViewCompat.setTranslationY(view,0);
    ViewCompat.setTranslationX(view,0);
    dispatchMoveFinished(item);
    mMoveAnimations.remove(item);
  }
  count=mRemoveAnimations.size();
  for (int i=count - 1; i >= 0; i--) {
    RecyclerView.ViewHolder item=mRemoveAnimations.get(i);
    View view=item.itemView;
    ViewCompat.animate(view).cancel();
    ViewCompat.setAlpha(view,1);
    dispatchRemoveFinished(item);
    mRemoveAnimations.remove(item);
  }
  count=mAddAnimations.size();
  for (int i=count - 1; i >= 0; i--) {
    RecyclerView.ViewHolder item=mAddAnimations.get(i);
    View view=item.itemView;
    ViewCompat.animate(view).cancel();
    ViewCompat.setAlpha(view,1);
    dispatchAddFinished(item);
    mAddAnimations.remove(item);
  }
  mMoves.clear();
  mAdditions.clear();
  dispatchAnimationsFinished();
}
