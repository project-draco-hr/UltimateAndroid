{
  Logs.d("Grid.onMeasure w=%s h=%s" + MeasureSpec.toString(widthMeasureSpec) + MeasureSpec.toString(heightMeasureSpec));
  int widthMeasureSize=MeasureSpec.getSize(widthMeasureSpec);
  if (oldWidthMeasureSize == widthMeasureSize) {
    Logs.d("SKIP Grid.onMeasure");
    setMeasuredDimension(getMeasuredWidth(),getMeasuredHeight());
    return;
  }
  long start=System.currentTimeMillis();
  oldWidthMeasureSize=widthMeasureSize;
  int cellSize=widthMeasureSize / 7;
  widthMeasureSize=cellSize * 7;
  int totalHeight=0;
  final int rowWidthSpec=makeMeasureSpec(widthMeasureSize,EXACTLY);
  final int rowHeightSpec=makeMeasureSpec(cellSize,EXACTLY);
  for (int c=0, numChildren=getChildCount(); c < numChildren; c++) {
    final View child=getChildAt(c);
    if (child.getVisibility() == View.VISIBLE) {
      if (c == 0) {
        measureChild(child,rowWidthSpec,makeMeasureSpec(cellSize,AT_MOST));
      }
 else {
        measureChild(child,rowWidthSpec,rowHeightSpec);
      }
      totalHeight+=child.getMeasuredHeight();
    }
  }
  final int measuredWidth=widthMeasureSize + 2;
  setMeasuredDimension(measuredWidth,totalHeight);
  Logs.d("Grid.onMeasure %d ms" + (System.currentTimeMillis() - start));
}
