{
  int r, g, b, a;
  int ratio=imageIn.getWidth() > imageIn.getHeight() ? imageIn.getHeight() * 32768 / imageIn.getWidth() : imageIn.getWidth() * 32768 / imageIn.getHeight();
  int cx=imageIn.getWidth() >> 1;
  int cy=imageIn.getHeight() >> 1;
  int max=cx * cx + cy * cy;
  int min=(int)(max * (1 - Size));
  int diff=max - min;
  for (int x=0; x < imageIn.getWidth(); x++) {
    for (int y=0; y < imageIn.getHeight(); y++) {
      r=imageIn.getRComponent(x,y);
      g=imageIn.getGComponent(x,y);
      b=imageIn.getBComponent(x,y);
      int dx=cx - x;
      int dy=cy - y;
      if (imageIn.getWidth() > imageIn.getHeight()) {
        dx=(dx * ratio) >> 15;
      }
 else {
        dy=(dy * ratio) >> 15;
      }
      int distSq=dx * dx + dy * dy;
      if (distSq > min) {
        int v=((max - distSq) << 8) / diff;
        v*=v;
        int ri=(r * v) >> 16;
        int gi=(g * v) >> 16;
        int bi=(b * v) >> 16;
        r=(byte)(ri > 255 ? 255 : (ri < 0 ? 0 : ri));
        g=(byte)(gi > 255 ? 255 : (gi < 0 ? 0 : gi));
        b=(byte)(bi > 255 ? 255 : (bi < 0 ? 0 : bi));
      }
      imageIn.setPixelColor(x,y,r,g,b);
    }
  }
  return imageIn;
}
