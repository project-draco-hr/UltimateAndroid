{
  if (mAdapter == null || mAdapter.getCount() == 0 || !mAreHeadersSticky) {
    return;
  }
  View firstItem=getChildAt(0);
  if (firstItem == null) {
    return;
  }
  long newHeaderId;
  int selectedHeaderPosition=firstVisibleItem;
  int beforeRowPosition=firstVisibleItem - mNumMeasuredColumns;
  if (beforeRowPosition < 0) {
    beforeRowPosition=firstVisibleItem;
  }
  int secondRowPosition=firstVisibleItem + mNumMeasuredColumns;
  if (secondRowPosition >= mAdapter.getCount()) {
    secondRowPosition=firstVisibleItem;
  }
  if (mVerticalSpacing == 0) {
    newHeaderId=mAdapter.getHeaderId(firstVisibleItem);
  }
 else   if (mVerticalSpacing < 0) {
    newHeaderId=mAdapter.getHeaderId(firstVisibleItem);
    View firstSecondRowView=getChildAt(mNumMeasuredColumns);
    if (firstSecondRowView.getTop() <= 0) {
      newHeaderId=mAdapter.getHeaderId(secondRowPosition);
      selectedHeaderPosition=secondRowPosition;
    }
 else {
      newHeaderId=mAdapter.getHeaderId(firstVisibleItem);
    }
  }
 else {
    int margin=getChildAt(0).getTop();
    if (0 < margin && margin < mVerticalSpacing) {
      newHeaderId=mAdapter.getHeaderId(beforeRowPosition);
      selectedHeaderPosition=beforeRowPosition;
    }
 else {
      newHeaderId=mAdapter.getHeaderId(firstVisibleItem);
    }
  }
  if (mCurrentHeaderId != newHeaderId) {
    swapStickiedHeader(mAdapter.getHeaderView(selectedHeaderPosition,mStickiedHeader,this));
    measureHeader();
    mCurrentHeaderId=newHeaderId;
  }
  final int childCount=getChildCount();
  if (childCount != 0) {
    View viewToWatch=null;
    int watchingChildDistance=99999;
    for (int i=0; i < childCount; i+=mNumMeasuredColumns) {
      View child=super.getChildAt(i);
      int childDistance;
      if (mClippingToPadding) {
        childDistance=child.getTop() - getPaddingTop();
      }
 else {
        childDistance=child.getTop();
      }
      if (childDistance < 0) {
        continue;
      }
      if (mAdapter.getItemId(getPositionForView(child)) == StickyGridHeadersBaseAdapterWrapper.ID_HEADER && childDistance < watchingChildDistance) {
        viewToWatch=child;
        watchingChildDistance=childDistance;
      }
    }
    int headerHeight=getHeaderHeight();
    if (viewToWatch != null) {
      if (firstVisibleItem == 0 && super.getChildAt(0).getTop() > 0 && !mClippingToPadding) {
        mHeaderBottomPosition=0;
      }
 else {
        if (mClippingToPadding) {
          mHeaderBottomPosition=Math.min(viewToWatch.getTop(),headerHeight + getPaddingTop());
          mHeaderBottomPosition=mHeaderBottomPosition < getPaddingTop() ? headerHeight + getPaddingTop() : mHeaderBottomPosition;
        }
 else {
          mHeaderBottomPosition=Math.min(viewToWatch.getTop(),headerHeight);
          mHeaderBottomPosition=mHeaderBottomPosition < 0 ? headerHeight : mHeaderBottomPosition;
        }
      }
    }
 else {
      mHeaderBottomPosition=headerHeight;
      if (mClippingToPadding) {
        mHeaderBottomPosition+=getPaddingTop();
      }
    }
  }
}
