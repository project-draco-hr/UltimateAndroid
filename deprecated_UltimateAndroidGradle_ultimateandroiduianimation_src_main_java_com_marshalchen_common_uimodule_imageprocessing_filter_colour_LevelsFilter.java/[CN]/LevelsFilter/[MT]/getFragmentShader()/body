{
  return "#define GammaCorrection(color, gamma)												pow(color, 1.0 / gamma)\n" + "#define LevelsControlInputRange(color, minInput, maxInput)						min(max(color - minInput, vec3(0.0)) / (maxInput - minInput), vec3(1.0))\n" + "#define LevelsControlInput(color, minInput, gamma, maxInput)						GammaCorrection(LevelsControlInputRange(color, minInput, maxInput), gamma)\n"+ "#define LevelsControlOutputRange(color, minOutput, maxOutput) 					mix(minOutput, maxOutput, color)\n"+ "#define LevelsControl(color, minInput, gamma, maxInput, minOutput, maxOutput) 	LevelsControlOutputRange(LevelsControlInput(color, minInput, gamma, maxInput), minOutput, maxOutput)\n"+ "precision mediump float;\n"+ "uniform sampler2D " + UNIFORM_TEXTURE0 + ";\n"+ "varying vec2 "+ VARYING_TEXCOORD+ ";\n"+ "uniform float "+ UNIFORM_GAMMA+ ";\n"+ "uniform float "+ UNIFORM_MININ+ ";\n"+ "uniform float "+ UNIFORM_MAXIN+ ";\n"+ "uniform float "+ UNIFORM_MINOUT+ ";\n"+ "uniform float "+ UNIFORM_MAXOUT+ ";\n"+ "void main(){\n"+ "   vec4 color = texture2D("+ UNIFORM_TEXTURE0+ ", "+ VARYING_TEXCOORD+ ");\n"+ "   gl_FragColor = vec4(LevelsControl(color.rgb, vec3("+ UNIFORM_MININ+ "), vec3("+ UNIFORM_GAMMA+ "), vec3("+ UNIFORM_MAXIN+ "), vec3("+ UNIFORM_MINOUT+ "), vec3("+ UNIFORM_MAXOUT+ ")), color.a);\n"+ "}\n";
}
