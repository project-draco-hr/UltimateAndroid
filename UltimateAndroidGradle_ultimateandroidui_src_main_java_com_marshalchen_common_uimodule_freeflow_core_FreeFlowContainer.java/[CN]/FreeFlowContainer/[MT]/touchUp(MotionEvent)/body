{
  if ((mTouchMode == TOUCH_MODE_SCROLL || mTouchMode == TOUCH_MODE_OVERFLING) && mVelocityTracker != null) {
    mVelocityTracker.computeCurrentVelocity(1000,maxFlingVelocity);
    if (Math.abs(mVelocityTracker.getXVelocity()) > minFlingVelocity || Math.abs(mVelocityTracker.getYVelocity()) > minFlingVelocity) {
      int maxX=mLayout.getContentWidth() - getWidth();
      int maxY=mLayout.getContentHeight() - getHeight();
      int allowedScrollOffset;
      if (mTouchMode == TOUCH_MODE_SCROLL) {
        allowedScrollOffset=0;
      }
 else {
        allowedScrollOffset=overflingDistance;
      }
      scroller.fling(viewPortX,viewPortY,-(int)mVelocityTracker.getXVelocity(),-(int)mVelocityTracker.getYVelocity(),0,maxX,0,maxY,allowedScrollOffset,allowedScrollOffset);
      mTouchMode=TOUCH_MODE_FLING;
      if (mOnTouchModeChangedListener != null) {
        mOnTouchModeChangedListener.onTouchModeChanged(mTouchMode);
      }
      post(flingRunnable);
    }
 else {
      mTouchMode=TOUCH_MODE_REST;
      if (mOnTouchModeChangedListener != null) {
        mOnTouchModeChangedListener.onTouchModeChanged(mTouchMode);
      }
    }
  }
 else   if (mTouchMode == TOUCH_MODE_DOWN || mTouchMode == TOUCH_MODE_DONE_WAITING) {
    if (mTouchModeReset != null) {
      removeCallbacks(mTouchModeReset);
    }
    FreeFlowItem endTouchAt=ViewUtils.getItemAt(frames,(int)(viewPortX + event.getX()),(int)(viewPortY + event.getY()));
    if (beginTouchAt != null && beginTouchAt.view != null && beginTouchAt == endTouchAt) {
      beginTouchAt.view.setPressed(true);
      mTouchModeReset=new Runnable(){
        @Override public void run(){
          mTouchModeReset=null;
          mTouchMode=TOUCH_MODE_REST;
          if (mOnTouchModeChangedListener != null) {
            mOnTouchModeChangedListener.onTouchModeChanged(mTouchMode);
          }
          if (beginTouchAt != null && beginTouchAt.view != null) {
            beginTouchAt.view.setPressed(false);
          }
          if (mChoiceActionMode == null && mOnItemSelectedListener != null) {
            mOnItemSelectedListener.onItemSelected(FreeFlowContainer.this,selectedFreeFlowItem);
          }
        }
      }
;
      selectedFreeFlowItem=beginTouchAt;
      postDelayed(mTouchModeReset,ViewConfiguration.getPressedStateDuration());
      mTouchMode=TOUCH_MODE_TAP;
      mPerformClick=new PerformClick();
      mPerformClick.run();
      if (mOnTouchModeChangedListener != null) {
        mOnTouchModeChangedListener.onTouchModeChanged(mTouchMode);
      }
    }
 else {
      mTouchMode=TOUCH_MODE_REST;
      if (mOnTouchModeChangedListener != null) {
        mOnTouchModeChangedListener.onTouchModeChanged(mTouchMode);
      }
    }
  }
}
