{
  path.reset();
  float x=-translateX;
  float y=-translateY;
  float scaledTriangleHeight=triangleHeightPx / scale;
  float resultWidth=bitmapWidth + 2 * translateX;
  float resultHeight=bitmapHeight + 2 * translateY;
  float centerY=resultHeight / 2f + y;
  path.setFillType(Path.FillType.EVEN_ODD);
  float rectLeft;
  float rectRight;
switch (arrowPosition) {
case LEFT:
    rectLeft=scaledTriangleHeight + x;
  rectRight=resultWidth + rectLeft;
path.addRect(rectLeft,y,rectRight,resultHeight + y,Path.Direction.CW);
path.moveTo(x,centerY);
path.lineTo(rectLeft,centerY - scaledTriangleHeight);
path.lineTo(rectLeft,centerY + scaledTriangleHeight);
path.lineTo(x,centerY);
break;
case RIGHT:
rectLeft=x;
float imgRight=resultWidth + rectLeft;
rectRight=imgRight - scaledTriangleHeight;
path.addRect(rectLeft,y,rectRight,resultHeight + y,Path.Direction.CW);
path.moveTo(imgRight,centerY);
path.lineTo(rectRight,centerY - scaledTriangleHeight);
path.lineTo(rectRight,centerY + scaledTriangleHeight);
path.lineTo(imgRight,centerY);
break;
}
}
