{
  return "precision mediump float;\n" + "uniform sampler2D " + UNIFORM_TEXTURE0 + ";\n"+ "uniform sampler2D "+ UNIFORM_TEXTUREBASE+ 1+ ";\n"+ "varying vec2 "+ VARYING_TEXCOORD+ ";\n"+ "const float halfPixelWidth = 1.0/512.0;"+ "void main(){\n"+ "   vec4 texColour = texture2D("+ UNIFORM_TEXTURE0+ ","+ VARYING_TEXCOORD+ ");\n"+ "   float rVal;\n"+ "   if(texColour.r < halfPixelWidth) {"+ "     rVal = texture2D("+ UNIFORM_TEXTUREBASE+ 1+ ", vec2(texColour.r + halfPixelWidth, 0.5)).r;\n"+ "   } else {\n"+ "     rVal = texture2D("+ UNIFORM_TEXTUREBASE+ 1+ ", vec2(texColour.r - halfPixelWidth, 0.5)).r;\n"+ "   }\n"+ "   float gVal;\n"+ "   if(texColour.g < halfPixelWidth) {"+ "     gVal = texture2D("+ UNIFORM_TEXTUREBASE+ 1+ ", vec2(texColour.g + halfPixelWidth, 0.5)).r;\n"+ "   } else {\n"+ "     gVal = texture2D("+ UNIFORM_TEXTUREBASE+ 1+ ", vec2(texColour.g - halfPixelWidth, 0.5)).r;\n"+ "   }\n"+ "   float bVal;\n"+ "   if(texColour.b < halfPixelWidth) {"+ "     bVal = texture2D("+ UNIFORM_TEXTUREBASE+ 1+ ", vec2(texColour.b + halfPixelWidth, 0.5)).r;\n"+ "   } else {\n"+ "     bVal = texture2D("+ UNIFORM_TEXTUREBASE+ 1+ ", vec2(texColour.b - halfPixelWidth, 0.5)).r;\n"+ "   }\n"+ "   gl_FragColor = vec4(rVal,gVal,bVal,texColour.a);\n"+ "}\n";
}
