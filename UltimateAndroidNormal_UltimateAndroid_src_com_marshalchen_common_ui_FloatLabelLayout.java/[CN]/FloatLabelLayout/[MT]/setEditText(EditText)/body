{
  mEditText=editText;
  mEditText.addTextChangedListener(new TextWatcher(){
    @Override public void afterTextChanged(    Editable s){
      if (TextUtils.isEmpty(s)) {
        if (mLabel.getVisibility() == View.VISIBLE) {
          hideLabel();
        }
      }
 else {
        if (mLabel.getVisibility() != View.VISIBLE) {
          showLabel();
        }
      }
    }
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
    }
  }
);
  mEditText.setOnFocusChangeListener(new View.OnFocusChangeListener(){
    @Override public void onFocusChange(    View view,    boolean focused){
      mLabel.setActivated(focused);
    }
  }
);
  mLabel.setText(mEditText.getHint());
}
