{
  clearImageView();
  InputStream is=null;
  try {
    is=getContentResolver().openInputStream(sourceUri);
    BitmapRegionDecoder decoder=BitmapRegionDecoder.newInstance(is,false);
    final int width=decoder.getWidth();
    final int height=decoder.getHeight();
    if (exifRotation != 0) {
      Matrix matrix=new Matrix();
      matrix.setRotate(-exifRotation);
      RectF adjusted=new RectF();
      matrix.mapRect(adjusted,new RectF(rect));
      adjusted.offset(adjusted.left < 0 ? width : 0,adjusted.top < 0 ? height : 0);
      rect=new Rect((int)adjusted.left,(int)adjusted.top,(int)adjusted.right,(int)adjusted.bottom);
    }
    try {
      croppedImage=decoder.decodeRegion(rect,new BitmapFactory.Options());
    }
 catch (    IllegalArgumentException e) {
      throw new IllegalArgumentException("Rectangle " + rect + " is outside of the image ("+ width+ ","+ height+ ","+ exifRotation+ ")",e);
    }
  }
 catch (  IOException e) {
    Logs.e("Error cropping image: " + e.getMessage(),e);
    finish();
  }
catch (  OutOfMemoryError e) {
    Log.e("OOM cropping image: " + e.getMessage(),e);
    setResultException(e);
  }
 finally {
    CropUtil.closeSilently(is);
  }
  return croppedImage;
}
