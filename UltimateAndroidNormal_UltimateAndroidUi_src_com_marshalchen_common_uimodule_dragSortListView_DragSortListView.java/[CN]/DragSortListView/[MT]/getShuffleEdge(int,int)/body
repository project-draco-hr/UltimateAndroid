{
  final int numHeaders=getHeaderViewsCount();
  final int numFooters=getFooterViewsCount();
  if (position <= numHeaders || (position >= getCount() - numFooters)) {
    return top;
  }
  int divHeight=getDividerHeight();
  int edge;
  int maxBlankHeight=mFloatViewHeight - mItemHeightCollapsed;
  int childHeight=getChildHeight(position);
  int itemHeight=getItemHeight(position);
  int otop=top;
  if (mSecondExpPos <= mSrcPos) {
    if (position == mSecondExpPos && mFirstExpPos != mSecondExpPos) {
      if (position == mSrcPos) {
        otop=top + itemHeight - mFloatViewHeight;
      }
 else {
        int blankHeight=itemHeight - childHeight;
        otop=top + blankHeight - maxBlankHeight;
      }
    }
 else     if (position > mSecondExpPos && position <= mSrcPos) {
      otop=top - maxBlankHeight;
    }
  }
 else {
    if (position > mSrcPos && position <= mFirstExpPos) {
      otop=top + maxBlankHeight;
    }
 else     if (position == mSecondExpPos && mFirstExpPos != mSecondExpPos) {
      int blankHeight=itemHeight - childHeight;
      otop=top + blankHeight;
    }
  }
  if (position <= mSrcPos) {
    edge=otop + (mFloatViewHeight - divHeight - getChildHeight(position - 1)) / 2;
  }
 else {
    edge=otop + (childHeight - divHeight - mFloatViewHeight) / 2;
  }
  return edge;
}
