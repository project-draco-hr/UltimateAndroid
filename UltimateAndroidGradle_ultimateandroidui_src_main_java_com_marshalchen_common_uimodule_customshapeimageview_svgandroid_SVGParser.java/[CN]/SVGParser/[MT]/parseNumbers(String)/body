{
  int n=s.length();
  int p=0;
  ArrayList<Float> numbers=new ArrayList<Float>();
  boolean skipChar=false;
  for (int i=1; i < n; i++) {
    if (skipChar) {
      skipChar=false;
      continue;
    }
    char c=s.charAt(i);
switch (c) {
case 'M':
case 'm':
case 'Z':
case 'z':
case 'L':
case 'l':
case 'H':
case 'h':
case 'V':
case 'v':
case 'C':
case 'c':
case 'S':
case 's':
case 'Q':
case 'q':
case 'T':
case 't':
case 'a':
case 'A':
case ')':
{
        String str=s.substring(p,i);
        if (str.trim().length() > 0) {
          Float f=Float.parseFloat(str);
          numbers.add(f);
        }
        p=i;
        return new NumberParse(numbers,p);
      }
case '\n':
case '\t':
case ' ':
case ',':
case '-':
{
      String str=s.substring(p,i);
      if (str.trim().length() > 0) {
        Float f=Float.parseFloat(str);
        numbers.add(f);
        if (c == '-') {
          p=i;
        }
 else {
          p=i + 1;
          skipChar=true;
        }
      }
 else {
        p++;
      }
      break;
    }
}
}
String last=s.substring(p);
if (last.length() > 0) {
try {
  numbers.add(Float.parseFloat(last));
}
 catch (NumberFormatException nfe) {
}
p=s.length();
}
return new NumberParse(numbers,p);
}
