{
  boolean isCurrentBurger=currentIconState == IconState.BURGER;
  boolean isCurrentArrow=currentIconState == IconState.ARROW;
  boolean isCurrentX=currentIconState == IconState.X;
  boolean isCurrentCheck=currentIconState == IconState.CHECK;
  boolean isAnimatingBurger=animatingIconState == IconState.BURGER;
  boolean isAnimatingArrow=animatingIconState == IconState.ARROW;
  boolean isAnimatingX=animatingIconState == IconState.X;
  boolean isAnimatingCheck=animatingIconState == IconState.CHECK;
  if ((isCurrentBurger && isAnimatingArrow) || (isCurrentArrow && isAnimatingBurger)) {
    animationState=AnimationState.BURGER_ARROW;
    return isCurrentBurger;
  }
  if ((isCurrentArrow && isAnimatingX) || (isCurrentX && isAnimatingArrow)) {
    animationState=AnimationState.ARROW_X;
    return isCurrentArrow;
  }
  if ((isCurrentBurger && isAnimatingX) || (isCurrentX && isAnimatingBurger)) {
    animationState=AnimationState.BURGER_X;
    return isCurrentBurger;
  }
  if ((isCurrentArrow && isAnimatingCheck) || (isCurrentCheck && isAnimatingArrow)) {
    animationState=AnimationState.ARROW_CHECK;
    return isCurrentArrow;
  }
  if ((isCurrentBurger && isAnimatingCheck) || (isCurrentCheck && isAnimatingBurger)) {
    animationState=AnimationState.BURGER_CHECK;
    return isCurrentBurger;
  }
  if ((isCurrentX && isAnimatingCheck) || (isCurrentCheck && isAnimatingX)) {
    animationState=AnimationState.X_CHECK;
    return isCurrentX;
  }
  throw new IllegalStateException(String.format("Animating from %s to %s is not supported",currentIconState,animatingIconState));
}
