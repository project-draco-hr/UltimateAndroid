{
  if (!isEnabledInAdapterView() || !isEnabled())   return true;
  if (!isSwipeEnabled())   return super.onTouchEvent(event);
  int action=event.getActionMasked();
  ViewParent parent=getParent();
  gestureDetector.onTouchEvent(event);
  Status status=getOpenStatus();
  ViewGroup touching=null;
  if (status == Status.Close) {
    touching=getSurfaceView();
  }
 else   if (status == Status.Open) {
    touching=getBottomView();
  }
switch (action) {
case MotionEvent.ACTION_DOWN:
    mDragHelper.processTouchEvent(event);
  parent.requestDisallowInterceptTouchEvent(true);
sX=event.getRawX();
sY=event.getRawY();
if (touching != null) touching.setPressed(true);
return true;
case MotionEvent.ACTION_MOVE:
{
if (sX == -1 || sY == -1) {
event.setAction(MotionEvent.ACTION_DOWN);
mDragHelper.processTouchEvent(event);
parent.requestDisallowInterceptTouchEvent(true);
sX=event.getRawX();
sY=event.getRawY();
return true;
}
float distanceX=event.getRawX() - sX;
float distanceY=event.getRawY() - sY;
float angle=Math.abs(distanceY / distanceX);
angle=(float)Math.toDegrees(Math.atan(angle));
boolean doNothing=false;
if (mDragEdge == DragEdge.Right) {
boolean suitable=(status == Status.Open && distanceX > 0) || (status == Status.Close && distanceX < 0);
suitable=suitable || (status == Status.Middle);
if (angle > 30 || !suitable) {
doNothing=true;
}
}
if (mDragEdge == DragEdge.Left) {
boolean suitable=(status == Status.Open && distanceX < 0) || (status == Status.Close && distanceX > 0);
suitable=suitable || status == Status.Middle;
if (angle > 30 || !suitable) {
doNothing=true;
}
}
if (mDragEdge == DragEdge.Top) {
boolean suitable=(status == Status.Open && distanceY < 0) || (status == Status.Close && distanceY > 0);
suitable=suitable || status == Status.Middle;
if (angle < 60 || !suitable) {
doNothing=true;
}
}
if (mDragEdge == DragEdge.Bottom) {
boolean suitable=(status == Status.Open && distanceY > 0) || (status == Status.Close && distanceY < 0);
suitable=suitable || status == Status.Middle;
if (angle < 60 || !suitable) {
doNothing=true;
}
}
if (doNothing) {
parent.requestDisallowInterceptTouchEvent(false);
return false;
}
 else {
if (touching != null) {
touching.setPressed(false);
}
parent.requestDisallowInterceptTouchEvent(true);
mDragHelper.processTouchEvent(event);
}
break;
}
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
{
sX=-1;
sY=-1;
if (touching != null) {
touching.setPressed(false);
}
}
default :
parent.requestDisallowInterceptTouchEvent(true);
mDragHelper.processTouchEvent(event);
}
return true;
}
