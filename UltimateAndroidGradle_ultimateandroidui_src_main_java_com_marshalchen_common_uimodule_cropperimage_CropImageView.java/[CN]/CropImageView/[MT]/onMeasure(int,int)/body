{
  int widthMode=MeasureSpec.getMode(widthMeasureSpec);
  int widthSize=MeasureSpec.getSize(widthMeasureSpec);
  int heightMode=MeasureSpec.getMode(heightMeasureSpec);
  int heightSize=MeasureSpec.getSize(heightMeasureSpec);
  if (mBitmap != null) {
    super.onMeasure(widthMeasureSpec,heightMeasureSpec);
    if (heightSize == 0)     heightSize=mBitmap.getHeight();
    int desiredWidth;
    int desiredHeight;
    double viewToBitmapWidthRatio=Double.POSITIVE_INFINITY;
    double viewToBitmapHeightRatio=Double.POSITIVE_INFINITY;
    if (widthSize < mBitmap.getWidth()) {
      viewToBitmapWidthRatio=(double)widthSize / (double)mBitmap.getWidth();
    }
    if (heightSize < mBitmap.getHeight()) {
      viewToBitmapHeightRatio=(double)heightSize / (double)mBitmap.getHeight();
    }
    if (viewToBitmapWidthRatio != Double.POSITIVE_INFINITY || viewToBitmapHeightRatio != Double.POSITIVE_INFINITY) {
      if (viewToBitmapWidthRatio <= viewToBitmapHeightRatio) {
        desiredWidth=widthSize;
        desiredHeight=(int)(mBitmap.getHeight() * viewToBitmapWidthRatio);
      }
 else {
        desiredHeight=heightSize;
        desiredWidth=(int)(mBitmap.getWidth() * viewToBitmapHeightRatio);
      }
    }
 else {
      desiredWidth=mBitmap.getWidth();
      desiredHeight=mBitmap.getHeight();
    }
    int width=getOnMeasureSpec(widthMode,widthSize,desiredWidth);
    int height=getOnMeasureSpec(heightMode,heightSize,desiredHeight);
    mLayoutWidth=width;
    mLayoutHeight=height;
    final Rect bitmapRect=ImageViewUtil.getBitmapRectCenterInside(mBitmap.getWidth(),mBitmap.getHeight(),mLayoutWidth,mLayoutHeight);
    mCropOverlayView.setBitmapRect(bitmapRect);
    setMeasuredDimension(mLayoutWidth,mLayoutHeight);
  }
 else {
    mCropOverlayView.setBitmapRect(EMPTY_RECT);
    setMeasuredDimension(widthSize,heightSize);
  }
}
