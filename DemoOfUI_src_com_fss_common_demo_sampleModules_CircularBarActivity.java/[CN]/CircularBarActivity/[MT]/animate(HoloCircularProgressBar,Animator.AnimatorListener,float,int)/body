{
  mProgressBarAnimator=ObjectAnimator.ofFloat(progressBar,"progress",progress);
  mProgressBarAnimator.setDuration(duration);
  mProgressBarAnimator.addListener(new Animator.AnimatorListener(){
    @Override public void onAnimationCancel(    final Animator animation){
    }
    @Override public void onAnimationEnd(    final Animator animation){
      progressBar.setProgress(progress);
    }
    @Override public void onAnimationRepeat(    final Animator animation){
    }
    @Override public void onAnimationStart(    final Animator animation){
    }
  }
);
  if (listener != null) {
    mProgressBarAnimator.addListener(listener);
  }
  mProgressBarAnimator.reverse();
  mProgressBarAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    final ValueAnimator animation){
      progressBar.setProgress((Float)animation.getAnimatedValue());
    }
  }
);
  progressBar.setMarkerProgress(progress);
  mProgressBarAnimator.start();
}
