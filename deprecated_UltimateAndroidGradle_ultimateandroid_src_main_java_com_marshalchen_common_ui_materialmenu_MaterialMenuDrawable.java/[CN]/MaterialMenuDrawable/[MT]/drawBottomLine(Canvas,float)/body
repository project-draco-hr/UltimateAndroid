{
  canvas.restore();
  canvas.save();
  float rotation=0, pivotX=0, pivotY=0;
  float rotation2=0;
  float pivotX2=width / 2 + dip3 / 2;
  float pivotY2=height - topPadding - dip2;
  float startX=sidePadding;
  float startY=height - topPadding - dip2;
  float stopX=width - sidePadding;
  float stopY=height - topPadding - dip2;
switch (animationState) {
case BURGER_ARROW:
    if (isMorphingForward()) {
      rotation=ARROW_TOP_LINE_ANGLE * ratio;
    }
 else {
      rotation=ARROW_TOP_LINE_ANGLE + (1 - ratio) * ARROW_BOT_LINE_ANGLE;
    }
  pivotX=width / 2;
pivotY=height / 2;
stopX=width - sidePadding - resolveStrokeModifier(ratio);
startX=sidePadding + dip3 * ratio;
break;
case BURGER_X:
if (isMorphingForward()) {
rotation2=-X_ROTATION_ANGLE * ratio;
}
 else {
rotation2=X_ROTATION_ANGLE * ratio;
}
rotation=X_BOT_LINE_ANGLE * ratio;
pivotX=sidePadding + dip4;
pivotY=height - topPadding - dip3;
stopX+=dip3 * ratio;
break;
case ARROW_X:
rotation=ARROW_TOP_LINE_ANGLE + (360 + X_BOT_LINE_ANGLE - ARROW_TOP_LINE_ANGLE) * ratio;
rotation2=-X_ROTATION_ANGLE * ratio;
pivotX=width / 2 + (sidePadding + dip4 - width / 2) * ratio;
pivotY=height / 2 + (height / 2 - topPadding - dip3) * ratio;
stopX-=resolveStrokeModifier(ratio);
startX+=dip3 * (1 - ratio);
break;
case ARROW_CHECK:
rotation=ARROW_TOP_LINE_ANGLE + ratio * CHECK_BOTTOM_ANGLE;
pivotX=width / 2 - dip3 * ratio;
pivotY=height / 2 - dip3 * ratio;
stopX-=resolveStrokeModifier(1);
startX+=dip3;
break;
case BURGER_CHECK:
rotation=ratio * (CHECK_BOTTOM_ANGLE + ARROW_TOP_LINE_ANGLE);
pivotX=width / 2 - dip3 * ratio;
pivotY=height / 2 - dip3 * ratio;
startX+=dip3 * ratio;
stopX-=resolveStrokeModifier(ratio);
break;
case X_CHECK:
rotation2=-X_ROTATION_ANGLE * (1 - ratio);
rotation=X_BOT_LINE_ANGLE + (CHECK_BOTTOM_ANGLE + ARROW_TOP_LINE_ANGLE - X_BOT_LINE_ANGLE) * ratio;
pivotX=sidePadding + dip4 + (width / 2 - sidePadding - dip3 - dip4) * ratio;
pivotY=height - topPadding - dip3 + (topPadding + height / 2 - height) * ratio;
startX+=dip3 - dip3 * (1 - ratio);
stopX-=resolveStrokeModifier(1 - ratio);
break;
}
canvas.rotate(rotation,pivotX,pivotY);
canvas.rotate(rotation2,pivotX2,pivotY2);
canvas.drawLine(startX,startY,stopX,stopY,iconPaint);
}
