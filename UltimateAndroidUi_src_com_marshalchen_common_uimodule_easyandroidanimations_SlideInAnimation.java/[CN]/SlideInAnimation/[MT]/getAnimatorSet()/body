{
  ViewGroup parentView=(ViewGroup)view.getParent(), rootView=(ViewGroup)view.getRootView();
  while (!parentView.equals(rootView)) {
    parentView.setClipChildren(false);
    parentView=(ViewGroup)parentView.getParent();
  }
  rootView.setClipChildren(false);
  int[] locationView=new int[2];
  view.getLocationOnScreen(locationView);
  ObjectAnimator slideAnim=null;
switch (direction) {
case DIRECTION_LEFT:
    slideAnim=ObjectAnimator.ofFloat(view,View.X,-locationView[0] - view.getWidth(),view.getX());
  break;
case DIRECTION_RIGHT:
slideAnim=ObjectAnimator.ofFloat(view,View.X,rootView.getRight(),view.getX());
break;
case DIRECTION_UP:
slideAnim=ObjectAnimator.ofFloat(view,View.Y,-locationView[1] - view.getHeight(),view.getY());
break;
case DIRECTION_DOWN:
slideAnim=ObjectAnimator.ofFloat(view,View.Y,rootView.getBottom(),view.getY());
break;
default :
break;
}
AnimatorSet slideSet=new AnimatorSet();
slideSet.play(slideAnim);
slideSet.setInterpolator(interpolator);
slideSet.setDuration(duration);
slideSet.addListener(new AnimatorListenerAdapter(){
@Override public void onAnimationStart(Animator animation){
view.setVisibility(View.VISIBLE);
}
@Override public void onAnimationEnd(Animator animation){
if (getListener() != null) {
getListener().onAnimationEnd(SlideInAnimation.this);
}
}
}
);
return slideSet;
}
