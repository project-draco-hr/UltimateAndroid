{
  mContext=context;
  mMaxPictures=DEFAULT_MAX_PICTURES;
  mThumbnailHeight=mContext.getResources().getDimension(R.dimen.patio_default_thumbnail_height);
  mThumbnailWidth=mContext.getResources().getDimension(R.dimen.patio_default_thumbnail_width);
  mThumbnailsMessageString="patio_thumbnails_message";
  mPatioThumbnails=new ArrayList<PatioThumbnail>();
  setOrientation(VERTICAL);
  float thumbnailsContainerPadding=mContext.getResources().getDimension(R.dimen.patio_default_thumbnails_container_padding);
  int actionsTextColor=mContext.getResources().getColor(R.color.patio_default_action_text_color);
  int thumbnailsWrapperBackground=mContext.getResources().getColor(R.color.patio_default_thumbnails_container_background);
  LayoutInflater inflater=LayoutInflater.from(context);
  inflater.inflate(WIDGET_LAYOUT_RES_ID,this,true);
  mTakePicture=(Button)findViewById(R.id.patio_action_take_picture);
  mAttachPicture=(Button)findViewById(R.id.patio_action_attach_picture);
  mRemovePicture=(Button)findViewById(R.id.patio_action_remove_picture);
  mCancel=(Button)findViewById(R.id.patio_action_cancel);
  mThumbnailsWrapper=(HorizontalScrollView)findViewById(R.id.patio_thumbnails_wrapper);
  mThumbnailsContainer=(LinearLayout)findViewById(R.id.patio_thumbnails_container);
  mThumbnailsCount=(TextView)findViewById(R.id.patio_thumbnails_count_message);
  mToolbarAddActions=(LinearLayout)findViewById(R.id.patio_add_actions_toolbar);
  mToolbarRemoveActions=(LinearLayout)findViewById(R.id.patio_remove_actions_toolbar);
  mToolbarRemoveActions.setVisibility(View.GONE);
  if (!isInEditMode()) {
    mTakePicture.setOnClickListener(this);
    mAttachPicture.setOnClickListener(this);
    mRemovePicture.setOnClickListener(this);
    mCancel.setOnClickListener(this);
  }
  if (attributeSet != null) {
    TypedArray a=mContext.getTheme().obtainStyledAttributes(attributeSet,R.styleable.Patio,0,0);
    try {
      mMaxPictures=a.getInt(R.styleable.Patio_maxPictures,DEFAULT_MAX_PICTURES);
      mThumbnailHeight=a.getDimension(R.styleable.Patio_thumbnailHeight,mThumbnailHeight);
      mThumbnailWidth=a.getDimension(R.styleable.Patio_thumbnailWidth,mThumbnailWidth);
      mThumbnailsMessageString=a.getString(R.styleable.Patio_thumbnailsMessage);
      thumbnailsContainerPadding=a.getDimension(R.styleable.Patio_thumbnailsContainerPadding,thumbnailsContainerPadding);
      actionsTextColor=a.getColor(R.styleable.Patio_actionsTextColor,actionsTextColor);
      thumbnailsWrapperBackground=a.getColor(R.styleable.Patio_thumbnailsContainerBackground,thumbnailsWrapperBackground);
    }
  finally {
      a.recycle();
    }
  }
  if (mMaxPictures <= 0) {
    mMaxPictures=DEFAULT_MAX_PICTURES;
  }
  if (mThumbnailsMessageString == null) {
    mThumbnailsMessageString="patio_thumbnails_message";
  }
  mTakePicture.setTextColor(actionsTextColor);
  mAttachPicture.setTextColor(actionsTextColor);
  mRemovePicture.setTextColor(actionsTextColor);
  mCancel.setTextColor(actionsTextColor);
  mThumbnailsWrapper.setBackgroundColor(thumbnailsWrapperBackground);
  ViewGroup.LayoutParams layoutParams;
  int paddingTop, paddingBottom, paddingLeft, paddingRight;
  layoutParams=mThumbnailsWrapper.getLayoutParams();
  layoutParams.height=Float.valueOf(mThumbnailHeight).intValue();
  mThumbnailsWrapper.setLayoutParams(layoutParams);
  paddingTop=paddingBottom=paddingLeft=paddingRight=Float.valueOf(thumbnailsContainerPadding).intValue();
  mThumbnailsContainer.setPadding(paddingLeft,paddingTop,paddingRight,paddingBottom);
  updateThumbnailsMessage();
}
