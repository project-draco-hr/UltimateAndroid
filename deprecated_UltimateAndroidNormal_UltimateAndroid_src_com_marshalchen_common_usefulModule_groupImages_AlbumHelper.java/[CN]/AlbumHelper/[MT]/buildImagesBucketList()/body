{
  long startTime=System.currentTimeMillis();
  getThumbnail();
  String columns[]=new String[]{Media._ID,Media.BUCKET_ID,Media.PICASA_ID,Media.DATA,Media.DISPLAY_NAME,Media.TITLE,Media.SIZE,Media.BUCKET_DISPLAY_NAME};
  Cursor cur=cr.query(Media.EXTERNAL_CONTENT_URI,columns,null,null,null);
  if (cur.moveToFirst()) {
    int photoIDIndex=cur.getColumnIndexOrThrow(Media._ID);
    int photoPathIndex=cur.getColumnIndexOrThrow(Media.DATA);
    int photoNameIndex=cur.getColumnIndexOrThrow(Media.DISPLAY_NAME);
    int photoTitleIndex=cur.getColumnIndexOrThrow(Media.TITLE);
    int photoSizeIndex=cur.getColumnIndexOrThrow(Media.SIZE);
    int bucketDisplayNameIndex=cur.getColumnIndexOrThrow(Media.BUCKET_DISPLAY_NAME);
    int bucketIdIndex=cur.getColumnIndexOrThrow(Media.BUCKET_ID);
    int picasaIdIndex=cur.getColumnIndexOrThrow(Media.PICASA_ID);
    int totalNum=cur.getCount();
    do {
      String _id=cur.getString(photoIDIndex);
      String name=cur.getString(photoNameIndex);
      String path=cur.getString(photoPathIndex);
      String title=cur.getString(photoTitleIndex);
      String size=cur.getString(photoSizeIndex);
      String bucketName=cur.getString(bucketDisplayNameIndex);
      String bucketId=cur.getString(bucketIdIndex);
      String picasaId=cur.getString(picasaIdIndex);
      Log.i(TAG,_id + ", bucketId: " + bucketId+ ", picasaId: "+ picasaId+ " name:"+ name+ " path:"+ path+ " title: "+ title+ " size: "+ size+ " bucket: "+ bucketName+ "---");
      ImageBucket bucket=bucketList.get(bucketId);
      if (bucket == null) {
        bucket=new ImageBucket();
        bucketList.put(bucketId,bucket);
        bucket.imageList=new ArrayList<ImageItem>();
        bucket.bucketName=bucketName;
      }
      bucket.count++;
      ImageItem imageItem=new ImageItem();
      imageItem.imageId=_id;
      imageItem.imagePath=path;
      imageItem.thumbnailPath=thumbnailList.get(_id);
      bucket.imageList.add(imageItem);
    }
 while (cur.moveToNext());
  }
  Iterator<Entry<String,ImageBucket>> itr=bucketList.entrySet().iterator();
  while (itr.hasNext()) {
    Entry<String,ImageBucket> entry=(Entry<String,ImageBucket>)itr.next();
    ImageBucket bucket=entry.getValue();
    Log.d(TAG,entry.getKey() + ", " + bucket.bucketName+ ", "+ bucket.count+ " ---------- ");
    for (int i=0; i < bucket.imageList.size(); ++i) {
      ImageItem image=bucket.imageList.get(i);
      Log.d(TAG,"----- " + image.imageId + ", "+ image.imagePath+ ", "+ image.thumbnailPath);
    }
  }
  hasBuildImagesBucketList=true;
  long endTime=System.currentTimeMillis();
  Log.d(TAG,"use time: " + (endTime - startTime) + " ms");
}
