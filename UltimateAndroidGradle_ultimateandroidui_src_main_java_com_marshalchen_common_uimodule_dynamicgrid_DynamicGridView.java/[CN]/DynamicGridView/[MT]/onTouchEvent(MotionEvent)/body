{
switch (event.getAction() & MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_DOWN:
    mDownX=(int)event.getX();
  mDownY=(int)event.getY();
mActivePointerId=event.getPointerId(0);
if (mIsEditMode && isEnabled()) {
layoutChildren();
mTotalOffsetY=0;
mTotalOffsetX=0;
int position=pointToPosition(mDownX,mDownY);
int itemNum=position - getFirstVisiblePosition();
View selectedView=getChildAt(itemNum);
if (selectedView == null) {
  return false;
}
 else {
  mMobileItemId=getAdapter().getItemId(position);
  mHoverCell=getAndAddHoverView(selectedView);
  if (isPostHoneycomb())   selectedView.setVisibility(View.INVISIBLE);
  mCellIsMobile=true;
  updateNeighborViewsForId(mMobileItemId);
}
}
 else if (!isEnabled()) {
return false;
}
break;
case MotionEvent.ACTION_MOVE:
if (mActivePointerId == INVALID_ID) {
break;
}
int pointerIndex=event.findPointerIndex(mActivePointerId);
mLastEventY=(int)event.getY(pointerIndex);
mLastEventX=(int)event.getX(pointerIndex);
int deltaY=mLastEventY - mDownY;
int deltaX=mLastEventX - mDownX;
if (mCellIsMobile) {
mHoverCellCurrentBounds.offsetTo(mHoverCellOriginalBounds.left + deltaX + mTotalOffsetX,mHoverCellOriginalBounds.top + deltaY + mTotalOffsetY);
mHoverCell.setBounds(mHoverCellCurrentBounds);
invalidate();
handleCellSwitch();
mIsMobileScrolling=false;
handleMobileCellScroll();
return false;
}
break;
case MotionEvent.ACTION_UP:
touchEventsEnded();
if (undoSupportEnabled) {
if (currentModification != null && !currentModification.getTransitions().isEmpty()) {
modificationStack.push(currentModification);
currentModification=new DynamicGridModification();
}
}
if (mHoverCell != null) {
if (mDropListener != null) {
mDropListener.onActionDrop();
}
}
break;
case MotionEvent.ACTION_CANCEL:
touchEventsCancelled();
if (mHoverCell != null) {
if (mDropListener != null) {
mDropListener.onActionDrop();
}
}
break;
case MotionEvent.ACTION_POINTER_UP:
pointerIndex=(event.getAction() & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;
final int pointerId=event.getPointerId(pointerIndex);
if (pointerId == mActivePointerId) {
touchEventsEnded();
}
break;
default :
break;
}
return super.onTouchEvent(event);
}
