{
  FoldableItemLayout layout=mFoldableLayoutsMap.get(position);
  if (layout != null)   return layout;
  layout=mFoldableLayoutsCache.poll();
  if (layout == null) {
    int farthestItem=position;
    int size=mFoldableLayoutsMap.size();
    for (int i=0; i < size; i++) {
      int pos=mFoldableLayoutsMap.keyAt(i);
      if (Math.abs(position - pos) > Math.abs(position - farthestItem)) {
        farthestItem=pos;
      }
    }
    if (Math.abs(farthestItem - position) > CACHED_LAYOUTS_OFFSET) {
      layout=mFoldableLayoutsMap.get(farthestItem);
      mFoldableLayoutsMap.remove(farthestItem);
      layout.getBaseLayout().removeAllViews();
    }
  }
  if (layout == null) {
    layout=new FoldableItemLayout(getContext());
    layout.setFoldShading(mFoldShading);
    addView(layout,PARAMS);
  }
  View view=mAdapter.getView(position,null,layout.getBaseLayout());
  layout.getBaseLayout().addView(view,PARAMS);
  mFoldableLayoutsMap.put(position,layout);
  return layout;
}
