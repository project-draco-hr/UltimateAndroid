{
  Log.d("mmm","" + (0xFF & paramMotionEvent.getAction()));
switch (0xFF & paramMotionEvent.getAction()) {
case 4:
case 0:
    if (!this.mScalingRunnalable.mIsFinished) {
      this.mScalingRunnalable.abortAnimation();
    }
  this.mLastMotionY=paramMotionEvent.getY();
this.mActivePointerId=paramMotionEvent.getPointerId(0);
this.mMaxScale=(this.mScreenHeight / this.mHeaderHeight);
this.mLastScale=(this.mHeaderContainer.getBottom() / this.mHeaderHeight);
break;
case 2:
Log.d("mmm","mActivePointerId" + mActivePointerId);
int j=paramMotionEvent.findPointerIndex(this.mActivePointerId);
if (j == -1) {
Log.e("PullToZoomListView","Invalid pointerId=" + this.mActivePointerId + " in onTouchEvent");
}
 else {
if (this.mLastMotionY == -1.0F) this.mLastMotionY=paramMotionEvent.getY(j);
if (this.mHeaderContainer.getBottom() >= this.mHeaderHeight) {
ViewGroup.LayoutParams localLayoutParams=this.mHeaderContainer.getLayoutParams();
float f=((paramMotionEvent.getY(j) - this.mLastMotionY + this.mHeaderContainer.getBottom()) / this.mHeaderHeight - this.mLastScale) / 2.0F + this.mLastScale;
if ((this.mLastScale <= 1.0D) && (f < this.mLastScale)) {
localLayoutParams.height=this.mHeaderHeight;
this.mHeaderContainer.setLayoutParams(localLayoutParams);
return super.onTouchEvent(paramMotionEvent);
}
this.mLastScale=Math.min(Math.max(f,1.0F),this.mMaxScale);
localLayoutParams.height=((int)(this.mHeaderHeight * this.mLastScale));
if (localLayoutParams.height < this.mScreenHeight) this.mHeaderContainer.setLayoutParams(localLayoutParams);
this.mLastMotionY=paramMotionEvent.getY(j);
return true;
}
this.mLastMotionY=paramMotionEvent.getY(j);
}
break;
case 1:
reset();
endScraling();
break;
case 3:
int i=paramMotionEvent.getActionIndex();
this.mLastMotionY=paramMotionEvent.getY(i);
this.mActivePointerId=paramMotionEvent.getPointerId(i);
break;
case 5:
onSecondaryPointerUp(paramMotionEvent);
this.mLastMotionY=paramMotionEvent.getY(paramMotionEvent.findPointerIndex(this.mActivePointerId));
break;
case 6:
}
return super.onTouchEvent(paramMotionEvent);
}
