{
  final LayoutParams lp=(LayoutParams)child.getLayoutParams();
  boolean result;
  final int save=canvas.save(Canvas.CLIP_SAVE_FLAG);
  if (mCanSlide && !lp.slideable && mSlideableView != null) {
    canvas.getClipBounds(mTmpRect);
    mTmpRect.right=Math.min(mTmpRect.right,mSlideableView.getLeft());
    canvas.clipRect(mTmpRect);
  }
  if (Build.VERSION.SDK_INT >= 11) {
    result=super.drawChild(canvas,child,drawingTime);
  }
 else {
    if (lp.dimWhenOffset && mSlideOffset > 0) {
      if (!child.isDrawingCacheEnabled()) {
        child.setDrawingCacheEnabled(true);
      }
      final Bitmap cache=child.getDrawingCache();
      if (cache != null) {
        canvas.drawBitmap(cache,child.getLeft(),child.getTop(),lp.dimPaint);
        result=false;
      }
 else {
        Log.e(TAG,"drawChild: child view " + child + " returned null drawing cache");
        result=super.drawChild(canvas,child,drawingTime);
      }
    }
 else {
      if (child.isDrawingCacheEnabled()) {
        child.setDrawingCacheEnabled(false);
      }
      result=super.drawChild(canvas,child,drawingTime);
    }
  }
  canvas.restoreToCount(save);
  return result;
}
