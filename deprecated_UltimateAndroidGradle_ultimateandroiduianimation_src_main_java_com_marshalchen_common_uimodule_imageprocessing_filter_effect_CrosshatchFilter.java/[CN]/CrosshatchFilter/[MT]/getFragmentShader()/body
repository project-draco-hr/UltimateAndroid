{
  return "precision mediump float;\n" + "uniform sampler2D " + UNIFORM_TEXTURE0 + ";\n"+ "varying vec2 "+ VARYING_TEXCOORD+ ";\n"+ "uniform float "+ UNIFORM_CROSS_HATCH_SPACING+ ";\n"+ "uniform float "+ UNIFORM_LINE_WIDTH+ ";\n"+ "const highp vec3 W = vec3(0.2125, 0.7154, 0.0721);\n"+ "void main(){\n"+ "  highp float luminance = dot(texture2D("+ UNIFORM_TEXTURE0+ ", "+ VARYING_TEXCOORD+ ").rgb, W);\n"+ "  lowp vec4 colorToDisplay = vec4(1.0, 1.0, 1.0, 1.0);\n"+ "  if (luminance < 1.00) {\n"+ "    	if (mod("+ VARYING_TEXCOORD+ ".x + "+ VARYING_TEXCOORD+ ".y, "+ UNIFORM_CROSS_HATCH_SPACING+ ") <= "+ UNIFORM_LINE_WIDTH+ ") {\n"+ "      	colorToDisplay = vec4(0.0, 0.0, 0.0, 1.0);\n"+ "	    }\n"+ "	}\n"+ "	if (luminance < 0.75) {\n"+ "    	if (mod("+ VARYING_TEXCOORD+ ".x - "+ VARYING_TEXCOORD+ ".y, "+ UNIFORM_CROSS_HATCH_SPACING+ ") <= "+ UNIFORM_LINE_WIDTH+ ") {\n"+ "       	colorToDisplay = vec4(0.0, 0.0, 0.0, 1.0);\n"+ "     	}\n"+ " 	}\n"+ "	if (luminance < 0.50) {\n"+ "    	if (mod("+ VARYING_TEXCOORD+ ".x + "+ VARYING_TEXCOORD+ ".y - ("+ UNIFORM_CROSS_HATCH_SPACING+ " / 2.0), "+ UNIFORM_CROSS_HATCH_SPACING+ ") <= "+ UNIFORM_LINE_WIDTH+ ") {\n"+ "        	colorToDisplay = vec4(0.0, 0.0, 0.0, 1.0);\n"+ "    	}\n"+ "	}\n"+ "	if (luminance < 0.3) {\n"+ "		if (mod("+ VARYING_TEXCOORD+ ".x - "+ VARYING_TEXCOORD+ ".y - ("+ UNIFORM_CROSS_HATCH_SPACING+ " / 2.0), "+ UNIFORM_CROSS_HATCH_SPACING+ ") <= "+ UNIFORM_LINE_WIDTH+ ") {\n"+ "     		colorToDisplay = vec4(0.0, 0.0, 0.0, 1.0);\n"+ "		}\n"+ "	}\n"+ "  gl_FragColor = colorToDisplay;\n"+ "}\n";
}
