{
  if (colors == null || colors.size() < 2) {
    return null;
  }
  Palette palette=new Palette(length);
  int[] red=palette.Red;
  int[] green=palette.Green;
  int[] blue=palette.Blue;
  int num=length / (colors.size() - 1);
  float num1=1f / ((float)num);
  int index=0;
  int rgb=colors.get(0);
  int colorR=(rgb & 0x00FF0000) >> 16;
  int colorG=(rgb & 0x0000FF00) >> 8;
  int colorB=rgb & 0x000000FF;
  for (int i=1; i < colors.size(); i++) {
    int r=(colors.get(i) & 0x00FF0000) >> 16;
    int g=(colors.get(i) & 0x0000FF00) >> 8;
    int b=colors.get(i) & 0x000000FF;
    for (int j=0; j < num; j++) {
      float num2=j * num1;
      int rr=colorR + ((int)((r - colorR) * num2));
      int gg=colorG + ((int)((g - colorG) * num2));
      int bb=colorB + ((int)((b - colorB) * num2));
      red[index]=(rr > 0xff ? 0xff : ((rr < 0) ? 0 : rr));
      green[index]=(gg > 0xff ? 0xff : ((gg < 0) ? 0 : gg));
      blue[index]=(bb > 0xff ? 0xff : ((bb < 0) ? 0 : bb));
      index++;
    }
    colorR=r;
    colorG=g;
    colorB=b;
  }
  if (index < length) {
    red[index]=red[index - 1];
    green[index]=green[index - 1];
    blue[index]=blue[index - 1];
  }
  return palette;
}
