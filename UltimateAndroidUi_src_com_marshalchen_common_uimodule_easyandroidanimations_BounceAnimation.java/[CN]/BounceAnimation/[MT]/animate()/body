{
  long singleBounceDuration=duration / numOfBounces / 4;
  if (singleBounceDuration == 0)   singleBounceDuration=1;
  final AnimatorSet bounceAnim=new AnimatorSet();
  bounceAnim.playSequentially(ObjectAnimator.ofFloat(view,View.TRANSLATION_Y,bounceDistance),ObjectAnimator.ofFloat(view,View.TRANSLATION_Y,-bounceDistance),ObjectAnimator.ofFloat(view,View.TRANSLATION_Y,bounceDistance),ObjectAnimator.ofFloat(view,View.TRANSLATION_Y,0));
  bounceAnim.setInterpolator(interpolator);
  bounceAnim.setDuration(singleBounceDuration);
  ViewGroup parentView=(ViewGroup)view.getParent(), rootView=(ViewGroup)view.getRootView();
  while (!parentView.equals(rootView)) {
    parentView.setClipChildren(false);
    parentView=(ViewGroup)parentView.getParent();
  }
  rootView.setClipChildren(false);
  bounceAnim.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      bounceCount++;
      if (bounceCount == numOfBounces) {
        if (getListener() != null) {
          getListener().onAnimationEnd(BounceAnimation.this);
        }
      }
 else {
        bounceAnim.start();
      }
    }
  }
);
  bounceAnim.start();
}
