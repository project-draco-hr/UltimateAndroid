{
  if (isAnimatingChanges) {
    layoutAnimator.onContainerTouchDown(event);
  }
  mScrollableHeight=mLayout.getContentHeight() - getHeight();
  mScrollableWidth=mLayout.getContentWidth() - getWidth();
  if (mTouchMode == TOUCH_MODE_FLING) {
    postDelayed(new Runnable(){
      @Override public void run(){
        if (mTouchMode == TOUCH_MODE_DOWN) {
          if (mTouchMode == TOUCH_MODE_DOWN) {
            scroller.forceFinished(true);
          }
        }
      }
    }
,FLYWHEEL_TIMEOUT);
  }
  beginTouchAt=ViewUtils.getItemAt(frames,(int)(viewPortX + event.getX()),(int)(viewPortY + event.getY()));
  deltaX=event.getX();
  deltaY=event.getY();
  mTouchMode=TOUCH_MODE_DOWN;
  if (mOnTouchModeChangedListener != null) {
    mOnTouchModeChangedListener.onTouchModeChanged(mTouchMode);
  }
  if (mPendingCheckForTap != null) {
    removeCallbacks(mPendingCheckForTap);
    mPendingCheckForLongPress=null;
  }
  if (beginTouchAt != null) {
    mPendingCheckForTap=new CheckForTap();
  }
  postDelayed(mPendingCheckForTap,ViewConfiguration.getTapTimeout());
}
