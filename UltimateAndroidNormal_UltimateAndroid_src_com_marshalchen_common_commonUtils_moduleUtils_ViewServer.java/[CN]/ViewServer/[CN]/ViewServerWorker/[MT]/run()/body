{
  BufferedReader in=null;
  try {
    in=new BufferedReader(new InputStreamReader(mClient.getInputStream()),1024);
    final String request=in.readLine();
    String command;
    String parameters;
    int index=request.indexOf(' ');
    if (index == -1) {
      command=request;
      parameters="";
    }
 else {
      command=request.substring(0,index);
      parameters=request.substring(index + 1);
    }
    boolean result;
    if (COMMAND_PROTOCOL_VERSION.equalsIgnoreCase(command)) {
      result=writeValue(mClient,VALUE_PROTOCOL_VERSION);
    }
 else     if (COMMAND_SERVER_VERSION.equalsIgnoreCase(command)) {
      result=writeValue(mClient,VALUE_SERVER_VERSION);
    }
 else     if (COMMAND_WINDOW_MANAGER_LIST.equalsIgnoreCase(command)) {
      result=listWindows(mClient);
    }
 else     if (COMMAND_WINDOW_MANAGER_GET_FOCUS.equalsIgnoreCase(command)) {
      result=getFocusedWindow(mClient);
    }
 else     if (COMMAND_WINDOW_MANAGER_AUTOLIST.equalsIgnoreCase(command)) {
      result=windowManagerAutolistLoop();
    }
 else {
      result=windowCommand(mClient,command,parameters);
    }
    if (!result) {
      Log.w(LOG_TAG,"An error occurred with the command: " + command);
    }
  }
 catch (  IOException e) {
    Log.w(LOG_TAG,"Connection error: ",e);
  }
 finally {
    if (in != null) {
      try {
        in.close();
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
    if (mClient != null) {
      try {
        mClient.close();
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
  }
}
