{
  if (mAdapter == null || mAdapter.getCount() <= 0) {
    setScrollingCacheEnabled(false);
    return;
  }
  if (!always && mCurItem == item && mItems.size() != 0) {
    setScrollingCacheEnabled(false);
    return;
  }
  if (item < 0) {
    item=0;
  }
 else   if (item >= mAdapter.getCount()) {
    item=mAdapter.getCount() - 1;
  }
  final int pageLimit=mOffscreenPageLimit;
  if (item > (mCurItem + pageLimit) || item < (mCurItem - pageLimit)) {
    for (int i=0; i < mItems.size(); i++) {
      mItems.get(i).scrolling=true;
    }
  }
  final boolean dispatchSelected=mCurItem != item;
  if (mFirstLayout) {
    mCurItem=item;
    if (dispatchSelected && mOnPageChangeListener != null) {
      mOnPageChangeListener.onPageSelected(item);
    }
    if (dispatchSelected && mInternalPageChangeListener != null) {
      mInternalPageChangeListener.onPageSelected(item);
    }
    requestLayout();
  }
 else {
    populate(item);
    scrollToItem(item,smoothScroll,velocity,dispatchSelected);
  }
}
