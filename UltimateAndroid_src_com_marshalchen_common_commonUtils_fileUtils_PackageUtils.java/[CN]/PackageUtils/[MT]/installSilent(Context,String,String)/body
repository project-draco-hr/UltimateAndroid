{
  if (filePath == null || filePath.length() == 0) {
    return INSTALL_FAILED_INVALID_URI;
  }
  File file=new File(filePath);
  if (file == null || file.length() <= 0 || !file.exists() || !file.isFile()) {
    return INSTALL_FAILED_INVALID_URI;
  }
  StringBuilder command=new StringBuilder().append("LD_LIBRARY_PATH=/vendor/lib:/system/lib pm install ").append(pmParams == null ? "" : pmParams).append(" ").append(filePath.replace(" ","\\ "));
  ShellUtils.CommandResult commandResult=ShellUtils.execCommand(command.toString(),!isSystemApplication(context),true);
  if (commandResult.successMsg != null && (commandResult.successMsg.contains("Success") || commandResult.successMsg.contains("success"))) {
    return INSTALL_SUCCEEDED;
  }
  Log.e(TAG,new StringBuilder().append("installSilent successMsg:").append(commandResult.successMsg).append(", ErrorMsg:").append(commandResult.errorMsg).toString());
  if (commandResult.errorMsg == null) {
    return INSTALL_FAILED_OTHER;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_ALREADY_EXISTS")) {
    return INSTALL_FAILED_ALREADY_EXISTS;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_INVALID_APK")) {
    return INSTALL_FAILED_INVALID_APK;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_INVALID_URI")) {
    return INSTALL_FAILED_INVALID_URI;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_INSUFFICIENT_STORAGE")) {
    return INSTALL_FAILED_INSUFFICIENT_STORAGE;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_DUPLICATE_PACKAGE")) {
    return INSTALL_FAILED_DUPLICATE_PACKAGE;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_NO_SHARED_USER")) {
    return INSTALL_FAILED_NO_SHARED_USER;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_UPDATE_INCOMPATIBLE")) {
    return INSTALL_FAILED_UPDATE_INCOMPATIBLE;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_SHARED_USER_INCOMPATIBLE")) {
    return INSTALL_FAILED_SHARED_USER_INCOMPATIBLE;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_MISSING_SHARED_LIBRARY")) {
    return INSTALL_FAILED_MISSING_SHARED_LIBRARY;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_REPLACE_COULDNT_DELETE")) {
    return INSTALL_FAILED_REPLACE_COULDNT_DELETE;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_DEXOPT")) {
    return INSTALL_FAILED_DEXOPT;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_OLDER_SDK")) {
    return INSTALL_FAILED_OLDER_SDK;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_CONFLICTING_PROVIDER")) {
    return INSTALL_FAILED_CONFLICTING_PROVIDER;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_NEWER_SDK")) {
    return INSTALL_FAILED_NEWER_SDK;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_TEST_ONLY")) {
    return INSTALL_FAILED_TEST_ONLY;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_CPU_ABI_INCOMPATIBLE")) {
    return INSTALL_FAILED_CPU_ABI_INCOMPATIBLE;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_MISSING_FEATURE")) {
    return INSTALL_FAILED_MISSING_FEATURE;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_CONTAINER_ERROR")) {
    return INSTALL_FAILED_CONTAINER_ERROR;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_INVALID_INSTALL_LOCATION")) {
    return INSTALL_FAILED_INVALID_INSTALL_LOCATION;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_MEDIA_UNAVAILABLE")) {
    return INSTALL_FAILED_MEDIA_UNAVAILABLE;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_VERIFICATION_TIMEOUT")) {
    return INSTALL_FAILED_VERIFICATION_TIMEOUT;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_VERIFICATION_FAILURE")) {
    return INSTALL_FAILED_VERIFICATION_FAILURE;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_PACKAGE_CHANGED")) {
    return INSTALL_FAILED_PACKAGE_CHANGED;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_UID_CHANGED")) {
    return INSTALL_FAILED_UID_CHANGED;
  }
  if (commandResult.errorMsg.contains("INSTALL_PARSE_FAILED_NOT_APK")) {
    return INSTALL_PARSE_FAILED_NOT_APK;
  }
  if (commandResult.errorMsg.contains("INSTALL_PARSE_FAILED_BAD_MANIFEST")) {
    return INSTALL_PARSE_FAILED_BAD_MANIFEST;
  }
  if (commandResult.errorMsg.contains("INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION")) {
    return INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION;
  }
  if (commandResult.errorMsg.contains("INSTALL_PARSE_FAILED_NO_CERTIFICATES")) {
    return INSTALL_PARSE_FAILED_NO_CERTIFICATES;
  }
  if (commandResult.errorMsg.contains("INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES")) {
    return INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES;
  }
  if (commandResult.errorMsg.contains("INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING")) {
    return INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING;
  }
  if (commandResult.errorMsg.contains("INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME")) {
    return INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME;
  }
  if (commandResult.errorMsg.contains("INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID")) {
    return INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID;
  }
  if (commandResult.errorMsg.contains("INSTALL_PARSE_FAILED_MANIFEST_MALFORMED")) {
    return INSTALL_PARSE_FAILED_MANIFEST_MALFORMED;
  }
  if (commandResult.errorMsg.contains("INSTALL_PARSE_FAILED_MANIFEST_EMPTY")) {
    return INSTALL_PARSE_FAILED_MANIFEST_EMPTY;
  }
  if (commandResult.errorMsg.contains("INSTALL_FAILED_INTERNAL_ERROR")) {
    return INSTALL_FAILED_INTERNAL_ERROR;
  }
  return INSTALL_FAILED_OTHER;
}
