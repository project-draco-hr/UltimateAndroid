{
  final BaseLayoutManager lm=(BaseLayoutManager)parent.getLayoutManager();
  final int rightWithPadding=parent.getWidth() - parent.getPaddingRight();
  final int bottomWithPadding=parent.getHeight() - parent.getPaddingBottom();
  final int childCount=parent.getChildCount();
  for (int i=0; i < childCount; i++) {
    final View child=parent.getChildAt(i);
    final int childLeft=lm.getDecoratedLeft(child);
    final int childTop=lm.getDecoratedTop(child);
    final int childRight=lm.getDecoratedRight(child);
    final int childBottom=lm.getDecoratedBottom(child);
    final MarginLayoutParams lp=(MarginLayoutParams)child.getLayoutParams();
    final int bottomOffset=childBottom - child.getBottom() - lp.bottomMargin;
    if (bottomOffset > 0 && childBottom < bottomWithPadding) {
      final int left=childLeft;
      final int top=childBottom - bottomOffset;
      final int right=childRight;
      final int bottom=top + mHorizontalDivider.getIntrinsicHeight();
      mHorizontalDivider.setBounds(left,top,right,bottom);
      mHorizontalDivider.draw(c);
    }
    final int rightOffset=childRight - child.getRight() - lp.rightMargin;
    if (rightOffset > 0 && childRight < rightWithPadding) {
      final int left=childRight - rightOffset;
      final int top=childTop;
      final int right=left + mVerticalDivider.getIntrinsicWidth();
      final int bottom=childBottom;
      mVerticalDivider.setBounds(left,top,right,bottom);
      mVerticalDivider.draw(c);
    }
  }
}
