{
  final TypedArray typedArray=context.obtainStyledAttributes(attrs,R.styleable.RippleView);
  rippleColor=typedArray.getColor(R.styleable.RippleView_rv_color,getResources().getColor(R.color.white));
  rippleType=typedArray.getInt(R.styleable.RippleView_rv_type,0);
  hasToZoom=typedArray.getBoolean(R.styleable.RippleView_rv_zoom,false);
  isCentered=typedArray.getBoolean(R.styleable.RippleView_rv_centered,false);
  DURATION=typedArray.getInteger(R.styleable.RippleView_rv_rippleDuration,DURATION);
  FRAME_RATE=typedArray.getInteger(R.styleable.RippleView_rv_framerate,FRAME_RATE);
  PAINT_ALPHA=typedArray.getInteger(R.styleable.RippleView_rv_alpha,PAINT_ALPHA);
  ripplePadding=typedArray.getDimensionPixelSize(R.styleable.RippleView_rv_ripplePadding,0);
  canvasHandler=new Handler();
  scaleAnimation=AnimationUtils.loadAnimation(context,R.anim.ripple_zoom);
  scaleAnimation.setDuration(typedArray.getInteger(R.styleable.RippleView_rv_zoomDuration,150));
  paint=new Paint();
  paint.setAntiAlias(true);
  paint.setStyle(Paint.Style.FILL);
  paint.setColor(rippleColor);
  paint.setAlpha(PAINT_ALPHA);
  this.setWillNotDraw(false);
  gestureDetector=new GestureDetector(context,new GestureDetector.SimpleOnGestureListener(){
    @Override public boolean onSingleTapConfirmed(    MotionEvent e){
      return true;
    }
    @Override public boolean onSingleTapUp(    MotionEvent e){
      return true;
    }
  }
);
  this.setDrawingCacheEnabled(true);
}
