{
  setMeasuredDimension(getDefaultSize(0,widthMeasureSpec),getDefaultSize(0,heightMeasureSpec));
  final int measuredWidth=getMeasuredWidth();
  final int maxGutterSize=measuredWidth / 10;
  mGutterSize=Math.min(maxGutterSize,mDefaultGutterSize);
  int childWidthSize=measuredWidth - getPaddingLeft() - getPaddingRight();
  int childHeightSize=getMeasuredHeight() - getPaddingTop() - getPaddingBottom();
  int size=getChildCount();
  for (int i=0; i < size; ++i) {
    final View child=getChildAt(i);
    if (child.getVisibility() != GONE) {
      final LayoutParams lp=(LayoutParams)child.getLayoutParams();
      if (lp != null && lp.isDecor) {
        final int hgrav=lp.gravity & Gravity.HORIZONTAL_GRAVITY_MASK;
        final int vgrav=lp.gravity & Gravity.VERTICAL_GRAVITY_MASK;
        int widthMode=MeasureSpec.AT_MOST;
        int heightMode=MeasureSpec.AT_MOST;
        boolean consumeVertical=vgrav == Gravity.TOP || vgrav == Gravity.BOTTOM;
        boolean consumeHorizontal=hgrav == Gravity.LEFT || hgrav == Gravity.RIGHT;
        if (consumeVertical) {
          widthMode=MeasureSpec.EXACTLY;
        }
 else         if (consumeHorizontal) {
          heightMode=MeasureSpec.EXACTLY;
        }
        int widthSize=childWidthSize;
        int heightSize=childHeightSize;
        if (lp.width != LayoutParams.WRAP_CONTENT) {
          widthMode=MeasureSpec.EXACTLY;
          if (lp.width != LayoutParams.FILL_PARENT) {
            widthSize=lp.width;
          }
        }
        if (lp.height != LayoutParams.WRAP_CONTENT) {
          heightMode=MeasureSpec.EXACTLY;
          if (lp.height != LayoutParams.FILL_PARENT) {
            heightSize=lp.height;
          }
        }
        final int widthSpec=MeasureSpec.makeMeasureSpec(widthSize,widthMode);
        final int heightSpec=MeasureSpec.makeMeasureSpec(heightSize,heightMode);
        child.measure(widthSpec,heightSpec);
        if (consumeVertical) {
          childHeightSize-=child.getMeasuredHeight();
        }
 else         if (consumeHorizontal) {
          childWidthSize-=child.getMeasuredWidth();
        }
      }
    }
  }
  mChildWidthMeasureSpec=MeasureSpec.makeMeasureSpec(childWidthSize,MeasureSpec.EXACTLY);
  mChildHeightMeasureSpec=MeasureSpec.makeMeasureSpec(childHeightSize,MeasureSpec.EXACTLY);
  mInLayout=true;
  populate();
  mInLayout=false;
  size=getChildCount();
  for (int i=0; i < size; ++i) {
    final View child=getChildAt(i);
    if (child.getVisibility() != GONE) {
      if (DEBUG)       Log.v(TAG,"Measuring #" + i + " "+ child+ ": "+ mChildWidthMeasureSpec);
      final LayoutParams lp=(LayoutParams)child.getLayoutParams();
      if (lp == null || !lp.isDecor) {
        final int widthSpec=MeasureSpec.makeMeasureSpec((int)(childWidthSize * lp.widthFactor),MeasureSpec.EXACTLY);
        child.measure(widthSpec,mChildHeightMeasureSpec);
      }
    }
  }
}
