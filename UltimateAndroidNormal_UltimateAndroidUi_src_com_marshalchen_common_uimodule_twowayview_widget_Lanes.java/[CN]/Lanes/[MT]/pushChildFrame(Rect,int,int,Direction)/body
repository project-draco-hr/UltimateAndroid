{
  final int delta;
  final Rect laneRect=mLanes[lane];
  if (mIsVertical) {
    if (direction == Direction.END) {
      delta=outRect.top - laneRect.bottom;
      laneRect.bottom=outRect.bottom + margin;
    }
 else {
      delta=outRect.bottom - laneRect.top;
      laneRect.top=outRect.top - margin;
    }
  }
 else {
    if (direction == Direction.END) {
      delta=outRect.left - laneRect.right;
      laneRect.right=outRect.right + margin;
    }
 else {
      delta=outRect.right - laneRect.left;
      laneRect.left=outRect.left - margin;
    }
  }
  invalidateEdges();
  return delta;
}
